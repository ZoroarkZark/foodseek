{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _colors = require(\"../../constants/colors\");\n\nvar _ThemeProvider = require(\"../../provider/ThemeProvider\");\n\nvar _excluded = [\"containerStyle\", \"leftContent\", \"rightContent\", \"backgroundColor\", \"borderColor\", \"borderWidth\", \"borderRadius\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Mr. REEETARD\\\\Desktop\\\\FoodSeek\\\\foodseek\\\\src\\\\ui\\\\foodseek\\\\node_modules\\\\react-native-rapi-ui\\\\components\\\\TextInput\\\\TextInput.tsx\";\n\nvar StyledTextInput = function StyledTextInput(props) {\n  var _useTheme = (0, _ThemeProvider.useTheme)(),\n      theme = _useTheme.theme;\n\n  var containerStyle = props.containerStyle,\n      leftContent = props.leftContent,\n      rightContent = props.rightContent,\n      _props$backgroundColo = props.backgroundColor,\n      backgroundColor = _props$backgroundColo === void 0 ? (containerStyle == null ? void 0 : containerStyle.backgroundColor) || _colors.component[theme].textInput.backgroundColor : _props$backgroundColo,\n      _props$borderColor = props.borderColor,\n      borderColor = _props$borderColor === void 0 ? _colors.component[theme].textInput.borderColor : _props$borderColor,\n      _props$borderWidth = props.borderWidth,\n      borderWidth = _props$borderWidth === void 0 ? (containerStyle == null ? void 0 : containerStyle.borderWidth) || 1 : _props$borderWidth,\n      _props$borderRadius = props.borderRadius,\n      borderRadius = _props$borderRadius === void 0 ? (containerStyle == null ? void 0 : containerStyle.borderRadius) || 8 : _props$borderRadius,\n      otherProps = (0, _objectWithoutProperties2.default)(props, _excluded);\n  return _react.default.createElement(_reactNative.View, {\n    style: Object.assign({}, containerStyle, {\n      backgroundColor: backgroundColor,\n      borderColor: borderColor,\n      borderWidth: borderWidth,\n      borderRadius: borderRadius,\n      flexDirection: (containerStyle == null ? void 0 : containerStyle.flexDirection) || \"row\",\n      paddingHorizontal: (containerStyle == null ? void 0 : containerStyle.paddingHorizontal) || 20,\n      alignItems: \"center\",\n      justifyContent: \"space-between\"\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, leftContent, _react.default.createElement(_reactNative.TextInput, (0, _extends2.default)({}, otherProps, {\n    placeholderTextColor: _colors.component[theme].textInput.placeholderTextColor,\n    style: {\n      flex: 1,\n      color: _colors.component[theme].textInput.color,\n      paddingVertical: (containerStyle == null ? void 0 : containerStyle.padding) || 10,\n      fontFamily: \"Ubuntu_400Regular\",\n      marginLeft: leftContent ? 5 : 0,\n      marginRight: rightContent ? 5 : 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  })), rightContent);\n};\n\nvar _default = StyledTextInput;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Mr. REEETARD/Desktop/FoodSeek/foodseek/src/ui/foodseek/node_modules/react-native-rapi-ui/components/TextInput/TextInput.tsx"],"names":["StyledTextInput","props","theme","containerStyle","leftContent","rightContent","backgroundColor","component","textInput","borderColor","borderWidth","borderRadius","otherProps","flexDirection","paddingHorizontal","alignItems","justifyContent","placeholderTextColor","flex","color","paddingVertical","padding","fontFamily","marginLeft","marginRight"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAOA;;AACA;;;;;;;AAYA,IAAMA,eAAgC,GAAG,SAAnCA,eAAmC,CAACC,KAAD,EAAkB;AACzD,kBAAkB,8BAAlB;AAAA,MAAQC,KAAR,aAAQA,KAAR;;AACA,MACEC,cADF,GAWIF,KAXJ,CACEE,cADF;AAAA,MAEEC,WAFF,GAWIH,KAXJ,CAEEG,WAFF;AAAA,MAGEC,YAHF,GAWIJ,KAXJ,CAGEI,YAHF;AAAA,8BAWIJ,KAXJ,CAIEK,eAJF;AAAA,MAIEA,eAJF,sCAIoB,CAAAH,cAAc,QAAd,YAAAA,cAAc,CAAEG,eAAhB,KAChBC,kBAAUL,KAAV,EAAiBM,SAAjB,CAA2BF,eAL/B;AAAA,2BAWIL,KAXJ,CAMEQ,WANF;AAAA,MAMEA,WANF,mCAMgBF,kBAAUL,KAAV,EAAiBM,SAAjB,CAA2BC,WAN3C;AAAA,2BAWIR,KAXJ,CAOES,WAPF;AAAA,MAOEA,WAPF,mCAOgB,CAAAP,cAAc,QAAd,YAAAA,cAAc,CAAEO,WAAhB,KAA+B,CAP/C;AAAA,4BAWIT,KAXJ,CAQEU,YARF;AAAA,MAQEA,YARF,oCAQiB,CAAAR,cAAc,QAAd,YAAAA,cAAc,CAAEQ,YAAhB,KAAgC,CARjD;AAAA,MAUKC,UAVL,0CAWIX,KAXJ;AAaA,SACE,6BAAC,iBAAD;AACE,IAAA,KAAK,oBACAE,cADA;AAEHG,MAAAA,eAAe,EAAEA,eAFd;AAGHG,MAAAA,WAAW,EAAEA,WAHV;AAIHC,MAAAA,WAAW,EAAEA,WAJV;AAKHC,MAAAA,YAAY,EAAEA,YALX;AAMHE,MAAAA,aAAa,EAAE,CAAAV,cAAc,QAAd,YAAAA,cAAc,CAAEU,aAAhB,KAAiC,KAN7C;AAOHC,MAAAA,iBAAiB,EAAE,CAAAX,cAAc,QAAd,YAAAA,cAAc,CAAEW,iBAAhB,KAAqC,EAPrD;AAQHC,MAAAA,UAAU,EAAE,QART;AASHC,MAAAA,cAAc,EAAE;AATb,MADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGZ,WAbH,EAcE,6BAAC,sBAAD,6BACMQ,UADN;AAEE,IAAA,oBAAoB,EAAEL,kBAAUL,KAAV,EAAiBM,SAAjB,CAA2BS,oBAFnD;AAGE,IAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,KAAK,EAAEZ,kBAAUL,KAAV,EAAiBM,SAAjB,CAA2BW,KAF7B;AAGLC,MAAAA,eAAe,EAAE,CAAAjB,cAAc,QAAd,YAAAA,cAAc,CAAEkB,OAAhB,KAA2B,EAHvC;AAILC,MAAAA,UAAU,EAAE,mBAJP;AAKLC,MAAAA,UAAU,EAAEnB,WAAW,GAAG,CAAH,GAAO,CALzB;AAMLoB,MAAAA,WAAW,EAAEnB,YAAY,GAAG,CAAH,GAAO;AAN3B,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAdF,EA0BGA,YA1BH,CADF;AA8BD,CA7CD;;eA8CeL,e","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ColorValue,\r\n  TextInput,\r\n  TextInputProps,\r\n  View,\r\n  ViewStyle,\r\n} from \"react-native\";\r\nimport { component } from \"../../constants/colors\";\r\nimport { useTheme } from \"../../provider/ThemeProvider\";\r\n\r\ninterface Props extends TextInputProps {\r\n  containerStyle?: ViewStyle;\r\n  leftContent?: React.ReactNode;\r\n  rightContent?: React.ReactNode;\r\n  backgroundColor?: ColorValue;\r\n  borderColor?: ColorValue;\r\n  borderWidth?: number;\r\n  borderRadius?: number;\r\n}\r\n\r\nconst StyledTextInput: React.FC<Props> = (props: Props) => {\r\n  const { theme } = useTheme();\r\n  const {\r\n    containerStyle,\r\n    leftContent,\r\n    rightContent,\r\n    backgroundColor = containerStyle?.backgroundColor ||\r\n      component[theme].textInput.backgroundColor,\r\n    borderColor = component[theme].textInput.borderColor,\r\n    borderWidth = containerStyle?.borderWidth || 1,\r\n    borderRadius = containerStyle?.borderRadius || 8,\r\n\r\n    ...otherProps\r\n  } = props;\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        ...containerStyle,\r\n        backgroundColor: backgroundColor,\r\n        borderColor: borderColor,\r\n        borderWidth: borderWidth,\r\n        borderRadius: borderRadius,\r\n        flexDirection: containerStyle?.flexDirection || \"row\",\r\n        paddingHorizontal: containerStyle?.paddingHorizontal || 20,\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      {leftContent}\r\n      <TextInput\r\n        {...otherProps}\r\n        placeholderTextColor={component[theme].textInput.placeholderTextColor}\r\n        style={{\r\n          flex: 1,\r\n          color: component[theme].textInput.color,\r\n          paddingVertical: containerStyle?.padding || 10,\r\n          fontFamily: \"Ubuntu_400Regular\",\r\n          marginLeft: leftContent ? 5 : 0,\r\n          marginRight: rightContent ? 5 : 0,\r\n        }}\r\n      />\r\n      {rightContent}\r\n    </View>\r\n  );\r\n};\r\nexport default StyledTextInput;\r\n"]},"metadata":{},"sourceType":"script"}