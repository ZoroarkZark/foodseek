{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Users = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Mr. REEETARD\\\\Desktop\\\\FoodSeek\\\\foodseek\\\\src\\\\ui\\\\foodseek\\\\src\\\\components\\\\fetchTest.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar Users = function Users(props) {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = (0, _react.useState)([]),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  getUsers = function getUsers() {\n    fetch('https://jsonplaceholder.typicode.com/users/').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setUsers(json);\n    }).catch(function (error) {\n      return console.error(error);\n    }).finally(function () {\n      return setLoading(false);\n    });\n  };\n\n  (0, _react.useEffect)(function () {\n    setLoading(true);\n    getUsers();\n  }, []);\n  return _react.default.createElement(_reactNative.View, {\n    style: {\n      padding: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, isLoading ? _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 26\n    }\n  }, \"Loading...\") : _react.default.createElement(_reactNative.FlatList, {\n    data: users,\n    keyExtractor: function keyExtractor(_ref) {\n      var id = _ref.id;\n      return id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return _react.default.createElement(_reactNative.Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 47\n        }\n      }, item.name, \"  \");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }));\n};\n\nexports.Users = Users;","map":{"version":3,"sources":["C:/Users/Mr. REEETARD/Desktop/FoodSeek/foodseek/src/ui/foodseek/src/components/fetchTest.js"],"names":["Users","props","isLoading","setLoading","users","setUsers","getUsers","fetch","then","response","json","catch","error","console","finally","padding","id","toString","item","name"],"mappings":";;;;;;;;;AACA;;AACA;;;;;;;;;AAEO,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAC1B,kBAAgC,qBAAS,KAAT,CAAhC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,UAAlB;;AACA,mBAA0B,qBAAS,EAAT,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACAC,EAAAA,QAAQ,GAAG,oBAAM;AACbC,IAAAA,KAAK,CAAC,6CAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACE,IAAD;AAAA,aAAUL,QAAQ,CAACK,IAAD,CAAlB;AAAA,KAFR,EAGGC,KAHH,CAGS,UAACC,KAAD;AAAA,aAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAX;AAAA,KAHT,EAIGE,OAJH,CAIW;AAAA,aAAMX,UAAU,CAAC,KAAD,CAAhB;AAAA,KAJX;AAKH,GAND;;AAOA,wBAAU,YAAM;AACZA,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,IAAAA,QAAQ;AACX,GAHD,EAGG,EAHH;AAIA,SACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAAES,MAAAA,OAAO,EAAE;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,SAAS,GAAG,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,GAEN,6BAAC,qBAAD;AACI,IAAA,IAAI,EAAEE,KADV;AAEI,IAAA,YAAY,EAAE;AAAA,UAAGY,EAAH,QAAGA,EAAH;AAAA,aAAYA,EAAE,CAACC,QAAH,EAAZ;AAAA,KAFlB;AAGI,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aAAc,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,IAAI,CAACC,IAAZ,OAAd;AAAA,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,CADJ;AAYH,CA1BM","sourcesContent":["// function calls fetch to url, sucks out the json, returns a display of loading (while awaiting data) or the data keyed to the user\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, FlatList, TouchableOpacity } from 'react-native';\r\n\r\nexport const Users = props => {\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [users, setUsers] = useState([]);\r\n    getUsers = () => {\r\n        fetch('https://jsonplaceholder.typicode.com/users/')\r\n          .then((response) => response.json())\r\n          .then((json) => setUsers(json))\r\n          .catch((error) => console.error(error))\r\n          .finally(() => setLoading(false));\r\n    }\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        getUsers();\r\n    }, []);\r\n    return(\r\n        <View style={{ padding: 20 }}>\r\n            {isLoading ? <Text>Loading...</Text> :\r\n            (\r\n                <FlatList\r\n                    data={users}\r\n                    keyExtractor={({ id }) => id.toString()}\r\n                    renderItem={({ item }) => <Text>{item.name}  </Text>}\r\n                />\r\n            )}\r\n        </View>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"script"}