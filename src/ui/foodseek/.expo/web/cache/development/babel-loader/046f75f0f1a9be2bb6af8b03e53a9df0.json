{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoginScreen = void 0;\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _expoStatusBar = require(\"expo-status-bar\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _Ionicons = _interopRequireDefault(require(\"@expo/vector-icons/Ionicons\"));\n\nvar _reactNativeRapiUi = require(\"react-native-rapi-ui\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Mr. REEETARD\\\\Desktop\\\\FoodSeek\\\\foodseek\\\\src\\\\ui\\\\foodseek\\\\src\\\\screens\\\\login.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nvar textStyles = _reactNative.StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10\n  }\n});\n\nfunction formUrl(url, email, password) {\n  var emailKey = \"email\";\n  var passKey = \"pass\";\n  var URL = concat(url, '?', emailKey, '=', email, '&', passKey, '=', password);\n  return URL;\n}\n\nfunction buildURL() {\n  var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"http://localhost:3000\";\n  var url = arguments.length > 1 ? arguments[1] : undefined;\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var URL = base + url;\n\n  if (params) {\n    var keys = Object.keys(params);\n    var vals = Object.values(params);\n    var query = \"?\";\n\n    for (var i = 0; i < keys.length; i++) {\n      var amp = i != keys.length - 1 ? \"&\" : \"\";\n      query += keys[i] + \"=\" + vals[i] + amp;\n    }\n\n    return URL + query;\n  }\n\n  return URL;\n}\n\nvar def_root = \"http://localhost:3000\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = (0, _react.useState)(\"\"),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(\"\"),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(false),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var navigation = (0, _native.useNavigation)();\n\n  function login() {\n    return _login.apply(this, arguments);\n  }\n\n  function _login() {\n    _login = (0, _asyncToGenerator2.default)(function* () {\n      setLoading(true);\n      var creds = {\n        email: email,\n        pass: password\n      };\n      navigation.navigate(\"Response\");\n    });\n    return _login.apply(this, arguments);\n  }\n\n  return _react.default.createElement(_reactNativeRapiUi.ThemeProvider, {\n    theme: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNativeRapiUi.Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 3,\n      paddingHorizontal: 20,\n      paddingBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeRapiUi.Text, {\n    fontWeight: \"bold\",\n    style: {\n      alignSelf: \"center\",\n      padding: 30\n    },\n    size: \"h3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Log-in\"), _react.default.createElement(_reactNativeRapiUi.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Email\"), _react.default.createElement(_reactNativeRapiUi.TextInput, {\n    style: textStyles.input,\n    value: email,\n    keyboardType: \"email-address\",\n    placeholder: \"enter your email\",\n    multiline: true,\n    numberOfLines: 3,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNativeRapiUi.Text, {\n    style: {\n      marginTop: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"Password\"), _react.default.createElement(_reactNativeRapiUi.TextInput, {\n    style: textStyles.input,\n    value: password,\n    placeholder: \"enter your password\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNativeRapiUi.Button, {\n    text: loading ? \"Loading\" : \"Continue\",\n    onPress: function onPress() {\n      login();\n    },\n    style: {\n      marginTop: 20\n    },\n    disabled: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexports.LoginScreen = LoginScreen;","map":{"version":3,"sources":["C:/Users/Mr. REEETARD/Desktop/FoodSeek/foodseek/src/ui/foodseek/src/screens/login.js"],"names":["styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","textStyles","input","height","margin","borderWidth","padding","formUrl","url","email","password","emailKey","passKey","URL","concat","buildURL","base","params","keys","Object","vals","values","query","i","length","amp","def_root","LoginScreen","setEmail","setPassword","loading","setLoading","navigation","login","creds","pass","navigate","paddingHorizontal","paddingBottom","alignSelf","text","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport Ionicons from '@expo/vector-icons/Ionicons';\r\nimport {  \r\n  ThemeProvider,\r\n  Layout,\r\n  TopNav,\r\n  Text,\r\n  TextInput,\r\n  Button,\r\n  useTheme, \r\n  themeColor, \r\n} from 'react-native-rapi-ui';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nconst textStyles = StyleSheet.create({\r\n  input: {\r\n    height: 40, \r\n    margin: 12,\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nfunction formUrl(url,email,password) {\r\n    const emailKey=\"email\";\r\n    const passKey=\"pass\";\r\n    let URL = concat(url,'?',emailKey,'=',email,'&',passKey,'=',password);\r\n    return(URL);\r\n}\r\n\r\n// This function will take in:\r\n//  -base   : root for the app\r\n//  -url    : action resource for the request\r\n//  -params : an object like {email: \"example@ex.com\", pass: \"secure_pass\"}\r\n// and return the finalized version of the url to pass in the request\r\nfunction buildURL(base = \"http://localhost:3000\", url, params = null){\r\n    var URL = base+url; // create the main url with the url appended to the root \r\n    \r\n    \r\n    if(params){\r\n      var keys = Object.keys(params); // get the keys and values\r\n      var vals = Object.values(params); \r\n\r\n      var query = \"?\";\r\n      for( let i=0; i<keys.length; i++){\r\n        var amp = (i!=keys.length-1) ? \"&\" : \"\"; // if we are not the last element add an & to split up parameters\r\n        query +=`${keys[i]}=${vals[i]}`+amp;\r\n      }\r\n      return (URL+query);\r\n    }\r\n\r\n    return URL;\r\n\r\n}\r\n\r\n\r\n\r\n//const def_root = \"http://localhost:3000\";\r\nconst def_root = \"http://localhost:3000\";\r\nexport const LoginScreen = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const navigation = useNavigation();\r\n\r\n  async function login(){\r\n    setLoading(true);\r\n    //  So Nico and I can set the keys to whatever we want them to be\r\n    // when you form the object to pass to build url you can ask us or we can start documentign more what they will be\r\n    // \r\n    //const response = await fetch(buildURL(def_root,\"/login\", {email: email, pass: password}),\r\n\r\n    //\r\n\r\n    // Screens CreateAcc, MainLoggedIn, Error\r\n\r\n    var creds = {\r\n      email: email,\r\n      pass: password\r\n    }\r\n\r\n    navigation.navigate(\"Response\");\r\n  }\r\n  return (\r\n    <ThemeProvider theme=\"light\">\r\n      <Layout>  \r\n        <View \r\n          style={{\r\n            flex: 3,\r\n            paddingHorizontal: 20,\r\n            paddingBottom: 20,\r\n          }}\r\n        >\r\n          <Text\r\n              fontWeight='bold'\r\n              style={{\r\n                alignSelf: \"center\",\r\n                padding: 30,\r\n              }}\r\n              size=\"h3\"\r\n              >Log-in</Text>\r\n          <Text>Email</Text>\r\n          <TextInput\r\n            style={textStyles.input}\r\n            value={email}\r\n            keyboardType=\"email-address\"\r\n            placeholder=\"enter your email\"\r\n            multiline={true}\r\n            numberOfLines={3}\r\n            onChangeText={(text) => setEmail(text)}\r\n            />\r\n          <Text style={{ marginTop: 15 }}>Password</Text>\r\n          <TextInput\r\n            style={textStyles.input}\r\n            value={password}\r\n            placeholder=\"enter your password\"\r\n            secureTextEntry={true}\r\n            onChangeText={(text) => setPassword(text)}\r\n          />\r\n          <Button\r\n            text={loading ? \"Loading\" : \"Continue\"}\r\n            onPress={() => {\r\n                login();\r\n            }}\r\n            style={{\r\n              marginTop: 20,\r\n            }}\r\n            disabled={loading}\r\n          />\r\n\r\n      </View> \r\n      </Layout>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"script"}