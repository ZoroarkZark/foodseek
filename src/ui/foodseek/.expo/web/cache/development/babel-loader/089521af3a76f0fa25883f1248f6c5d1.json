{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResponseScreen = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Mr. REEETARD\\\\Desktop\\\\FoodSeek\\\\foodseek\\\\src\\\\ui\\\\foodseek\\\\src\\\\screens\\\\response.js\";\n\nvar ResponseScreen = function ResponseScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  return _react.default.createElement(_reactNative.View, {\n    style: {\n      padding: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, \"The response body was...\"), _react.default.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, \"Blah\")));\n};\n\nexports.ResponseScreen = ResponseScreen;\n{}","map":{"version":3,"sources":["C:/Users/Mr. REEETARD/Desktop/FoodSeek/foodseek/src/ui/foodseek/src/screens/response.js"],"names":["ResponseScreen","route","navigation","padding"],"mappings":";;;;;;;AAAA;;AACA;;;;;AAEO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,OAAyB;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AAInD,SACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,4DACI,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ,CADJ;AASH,CAbM;;;AAcP,CAgBK","sourcesContent":["import React from 'react';\r\nimport { Text, View } from 'react-native';\r\n\r\nexport const ResponseScreen = ({route, navigation}) => {\r\n    //const { resp, response } = route.params; // saves the json from the response given after the fetch function is called\r\n    //let str = JSON.stringify(response);\r\n\r\n    return (\r\n        <View style={{ padding: 20 }}>\r\n            <>\r\n                <Text>The response body was...</Text>\r\n                <Text>Blah</Text>\r\n            </>\r\n            \r\n        </View>\r\n    );\r\n};\r\n{/*}\r\nexport const ResponseScreen = ({route, navigation}) => {\r\n    const { resp, response } = route.params; // saves the json from the response given after the fetch function is called\r\n    let str = JSON.stringify(response);\r\n\r\n    return (\r\n        <View style={{ padding: 20 }}>\r\n            {isLoading ? <Text>Loading...</Text> :\r\n            (\r\n                <>\r\n                <Text>The response body was...</Text>\r\n                <Text>str</Text>\r\n                </>\r\n            )}\r\n        </View>\r\n    );\r\n};*/}"]},"metadata":{},"sourceType":"script"}