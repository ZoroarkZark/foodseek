{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = timing;\n\nvar _base = require(\"../base\");\n\nvar internalTiming = (0, _base.proc)(function (clock, time, frameTime, position, finished, toValue, duration, nextProgress, progress, newFrameTime) {\n  var state = {\n    time: time,\n    finished: finished,\n    frameTime: frameTime,\n    position: position\n  };\n  var config = {\n    duration: duration,\n    toValue: toValue\n  };\n  var distanceLeft = (0, _base.sub)(config.toValue, state.position);\n  var fullDistance = (0, _base.divide)(distanceLeft, (0, _base.sub)(1, progress));\n  var startPosition = (0, _base.sub)(config.toValue, fullDistance);\n  var nextPosition = (0, _base.add)(startPosition, (0, _base.multiply)(fullDistance, nextProgress));\n  return (0, _base.block)([(0, _base.cond)((0, _base.greaterOrEq)(newFrameTime, config.duration), [(0, _base.set)(state.position, config.toValue), (0, _base.set)(state.finished, 1)], (0, _base.set)(state.position, nextPosition)), (0, _base.set)(state.frameTime, newFrameTime), (0, _base.set)(state.time, clock)]);\n});\n\nfunction timing(clock, state, config) {\n  if (config.duration === 0) {\n    return (0, _base.block)([(0, _base.set)(state.position, config.toValue), (0, _base.set)(state.finished, 1)]);\n  }\n\n  var lastTime = (0, _base.cond)(state.time, state.time, clock);\n  var newFrameTime = (0, _base.add)(state.frameTime, (0, _base.sub)(clock, lastTime));\n  var nextProgress = config.easing((0, _base.divide)(newFrameTime, config.duration));\n  var progress = config.easing((0, _base.divide)(state.frameTime, config.duration));\n  return internalTiming(clock, state.time, state.frameTime, state.position, state.finished, config.toValue, config.duration, nextProgress, progress, newFrameTime);\n}","map":{"version":3,"sources":["C:/Users/Mr. REEETARD/Desktop/FoodSeek/foodseek/src/ui/foodseek/node_modules/react-native-reanimated/lib/reanimated1/animations/timing.js"],"names":["internalTiming","clock","time","frameTime","position","finished","toValue","duration","nextProgress","progress","newFrameTime","state","config","distanceLeft","fullDistance","startPosition","nextPosition","timing","lastTime","easing"],"mappings":";;;;;AAAA;;AAYA,IAAMA,cAAc,GAAG,gBAAK,UAC1BC,KAD0B,EAE1BC,IAF0B,EAG1BC,SAH0B,EAI1BC,QAJ0B,EAK1BC,QAL0B,EAM1BC,OAN0B,EAO1BC,QAP0B,EAQ1BC,YAR0B,EAS1BC,QAT0B,EAU1BC,YAV0B,EAW1B;AACA,MAAMC,KAAK,GAAG;AACZT,IAAAA,IAAI,EAAJA,IADY;AAEZG,IAAAA,QAAQ,EAARA,QAFY;AAGZF,IAAAA,SAAS,EAATA,SAHY;AAIZC,IAAAA,QAAQ,EAARA;AAJY,GAAd;AAOA,MAAMQ,MAAM,GAAG;AACbL,IAAAA,QAAQ,EAARA,QADa;AAEbD,IAAAA,OAAO,EAAPA;AAFa,GAAf;AAKA,MAAMO,YAAY,GAAG,eAAID,MAAM,CAACN,OAAX,EAAoBK,KAAK,CAACP,QAA1B,CAArB;AACA,MAAMU,YAAY,GAAG,kBAAOD,YAAP,EAAqB,eAAI,CAAJ,EAAOJ,QAAP,CAArB,CAArB;AACA,MAAMM,aAAa,GAAG,eAAIH,MAAM,CAACN,OAAX,EAAoBQ,YAApB,CAAtB;AACA,MAAME,YAAY,GAAG,eAAID,aAAJ,EAAmB,oBAASD,YAAT,EAAuBN,YAAvB,CAAnB,CAArB;AAEA,SAAO,iBAAM,CACX,gBACE,uBAAYE,YAAZ,EAA0BE,MAAM,CAACL,QAAjC,CADF,EAEE,CAAC,eAAII,KAAK,CAACP,QAAV,EAAoBQ,MAAM,CAACN,OAA3B,CAAD,EAAsC,eAAIK,KAAK,CAACN,QAAV,EAAoB,CAApB,CAAtC,CAFF,EAGE,eAAIM,KAAK,CAACP,QAAV,EAAoBY,YAApB,CAHF,CADW,EAMX,eAAIL,KAAK,CAACR,SAAV,EAAqBO,YAArB,CANW,EAOX,eAAIC,KAAK,CAACT,IAAV,EAAgBD,KAAhB,CAPW,CAAN,CAAP;AASD,CAtCsB,CAAvB;;AAwCe,SAASgB,MAAT,CAAgBhB,KAAhB,EAAuBU,KAAvB,EAA8BC,MAA9B,EAAsC;AACnD,MAAIA,MAAM,CAACL,QAAP,KAAoB,CAAxB,EAA2B;AAEzB,WAAO,iBAAM,CAAC,eAAII,KAAK,CAACP,QAAV,EAAoBQ,MAAM,CAACN,OAA3B,CAAD,EAAsC,eAAIK,KAAK,CAACN,QAAV,EAAoB,CAApB,CAAtC,CAAN,CAAP;AACD;;AACD,MAAMa,QAAQ,GAAG,gBAAKP,KAAK,CAACT,IAAX,EAAiBS,KAAK,CAACT,IAAvB,EAA6BD,KAA7B,CAAjB;AACA,MAAMS,YAAY,GAAG,eAAIC,KAAK,CAACR,SAAV,EAAqB,eAAIF,KAAJ,EAAWiB,QAAX,CAArB,CAArB;AACA,MAAMV,YAAY,GAAGI,MAAM,CAACO,MAAP,CAAc,kBAAOT,YAAP,EAAqBE,MAAM,CAACL,QAA5B,CAAd,CAArB;AACA,MAAME,QAAQ,GAAGG,MAAM,CAACO,MAAP,CAAc,kBAAOR,KAAK,CAACR,SAAb,EAAwBS,MAAM,CAACL,QAA/B,CAAd,CAAjB;AACA,SAAOP,cAAc,CACnBC,KADmB,EAEnBU,KAAK,CAACT,IAFa,EAGnBS,KAAK,CAACR,SAHa,EAInBQ,KAAK,CAACP,QAJa,EAKnBO,KAAK,CAACN,QALa,EAMnBO,MAAM,CAACN,OANY,EAOnBM,MAAM,CAACL,QAPY,EAQnBC,YARmB,EASnBC,QATmB,EAUnBC,YAVmB,CAArB;AAYD","sourcesContent":["import {\r\n  cond,\r\n  sub,\r\n  divide,\r\n  multiply,\r\n  add,\r\n  block,\r\n  set,\r\n  greaterOrEq,\r\n  proc,\r\n} from '../base';\r\n\r\nconst internalTiming = proc(function (\r\n  clock,\r\n  time,\r\n  frameTime,\r\n  position,\r\n  finished,\r\n  toValue,\r\n  duration,\r\n  nextProgress,\r\n  progress,\r\n  newFrameTime\r\n) {\r\n  const state = {\r\n    time,\r\n    finished,\r\n    frameTime,\r\n    position,\r\n  };\r\n\r\n  const config = {\r\n    duration,\r\n    toValue,\r\n  };\r\n\r\n  const distanceLeft = sub(config.toValue, state.position);\r\n  const fullDistance = divide(distanceLeft, sub(1, progress));\r\n  const startPosition = sub(config.toValue, fullDistance);\r\n  const nextPosition = add(startPosition, multiply(fullDistance, nextProgress));\r\n\r\n  return block([\r\n    cond(\r\n      greaterOrEq(newFrameTime, config.duration),\r\n      [set(state.position, config.toValue), set(state.finished, 1)],\r\n      set(state.position, nextPosition)\r\n    ),\r\n    set(state.frameTime, newFrameTime),\r\n    set(state.time, clock),\r\n  ]);\r\n});\r\n\r\nexport default function timing(clock, state, config) {\r\n  if (config.duration === 0) {\r\n    // when duration is zero we end the timing immediately\r\n    return block([set(state.position, config.toValue), set(state.finished, 1)]);\r\n  }\r\n  const lastTime = cond(state.time, state.time, clock);\r\n  const newFrameTime = add(state.frameTime, sub(clock, lastTime));\r\n  const nextProgress = config.easing(divide(newFrameTime, config.duration));\r\n  const progress = config.easing(divide(state.frameTime, config.duration));\r\n  return internalTiming(\r\n    clock,\r\n    state.time,\r\n    state.frameTime,\r\n    state.position,\r\n    state.finished,\r\n    config.toValue,\r\n    config.duration,\r\n    nextProgress,\r\n    progress,\r\n    newFrameTime\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"script"}