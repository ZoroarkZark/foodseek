{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withTiming = void 0;\n\nvar _Easing = require(\"../Easing\");\n\nvar _util = require(\"./util\");\n\nvar withTiming = function () {\n  var _f = function _f(toValue, userConfig, callback) {\n    return (0, _util.defineAnimation)(toValue, function () {\n      var _f = function _f() {\n        var config = {\n          duration: 300,\n          easing: _Easing.Easing.inOut(_Easing.Easing.quad)\n        };\n\n        if (userConfig) {\n          Object.keys(userConfig).forEach(function (key) {\n            return config[key] = userConfig[key];\n          });\n        }\n\n        function timing(animation, now) {\n          var toValue = animation.toValue,\n              startTime = animation.startTime,\n              startValue = animation.startValue;\n          var runtime = now - startTime;\n\n          if (runtime >= config.duration) {\n            animation.startTime = 0;\n            animation.current = toValue;\n            return true;\n          }\n\n          var progress = animation.easing(runtime / config.duration);\n          animation.current = startValue + (toValue - startValue) * progress;\n          return false;\n        }\n\n        function onStart(animation, value, now, previousAnimation) {\n          if (previousAnimation && previousAnimation.type === 'timing' && previousAnimation.toValue === toValue && previousAnimation.startTime) {\n            animation.startTime = previousAnimation.startTime;\n            animation.startValue = previousAnimation.startValue;\n          } else {\n            animation.startTime = now;\n            animation.startValue = value;\n          }\n\n          animation.current = value;\n\n          if (typeof config.easing === 'object') {\n            animation.easing = config.easing.factory();\n          } else {\n            animation.easing = config.easing;\n          }\n        }\n\n        return {\n          type: 'timing',\n          onFrame: timing,\n          onStart: onStart,\n          progress: 0,\n          toValue: toValue,\n          startValue: 0,\n          startTime: 0,\n          easing: function easing() {\n            return 0;\n          },\n          current: toValue,\n          callback: callback\n        };\n      };\n\n      _f._closure = {\n        Easing: {\n          inOut: _Easing.Easing.inOut,\n          quad: _Easing.Easing.quad\n        },\n        userConfig: userConfig,\n        toValue: toValue,\n        callback: callback\n      };\n      _f.asString = \"function _f(){const{Easing,userConfig,toValue,callback}=jsThis._closure;{const config={duration:300,easing:Easing.inOut(Easing.quad)};if(userConfig){Object.keys(userConfig).forEach(function(key){return config[key]=userConfig[key];});}function timing(animation,now){const{toValue:toValue,startTime:startTime,startValue:startValue}=animation;const runtime=now-startTime;if(runtime>=config.duration){animation.startTime=0;animation.current=toValue;return true;}const progress=animation.easing(runtime/config.duration);animation.current=startValue+(toValue-startValue)*progress;return false;}function onStart(animation,value,now,previousAnimation){if(previousAnimation&&previousAnimation.type==='timing'&&previousAnimation.toValue===toValue&&previousAnimation.startTime){animation.startTime=previousAnimation.startTime;animation.startValue=previousAnimation.startValue;}else{animation.startTime=now;animation.startValue=value;}animation.current=value;if(typeof config.easing==='object'){animation.easing=config.easing.factory();}else{animation.easing=config.easing;}}return{type:'timing',onFrame:timing,onStart:onStart,progress:0,toValue:toValue,startValue:0,startTime:0,easing:function(){return 0;},current:toValue,callback:callback};}}\";\n      _f.__workletHash = 7771814081277;\n      _f.__location = \"C:\\\\Users\\\\Mr. REEETARD\\\\Desktop\\\\FoodSeek\\\\foodseek\\\\src\\\\ui\\\\foodseek\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\timing.js (5:36)\";\n      return _f;\n    }());\n  };\n\n  _f._closure = {\n    defineAnimation: _util.defineAnimation,\n    Easing: {\n      inOut: _Easing.Easing.inOut,\n      quad: _Easing.Easing.quad\n    }\n  };\n  _f.asString = \"function withTiming(toValue,userConfig,callback){const{defineAnimation,Easing}=jsThis._closure;{return defineAnimation(toValue,function(){'worklet';const config={duration:300,easing:Easing.inOut(Easing.quad)};if(userConfig){Object.keys(userConfig).forEach(function(key){return config[key]=userConfig[key];});}function timing(animation,now){const{toValue:toValue,startTime:startTime,startValue:startValue}=animation;const runtime=now-startTime;if(runtime>=config.duration){animation.startTime=0;animation.current=toValue;return true;}const progress=animation.easing(runtime/config.duration);animation.current=startValue+(toValue-startValue)*progress;return false;}function onStart(animation,value,now,previousAnimation){if(previousAnimation&&previousAnimation.type==='timing'&&previousAnimation.toValue===toValue&&previousAnimation.startTime){animation.startTime=previousAnimation.startTime;animation.startValue=previousAnimation.startValue;}else{animation.startTime=now;animation.startValue=value;}animation.current=value;if(typeof config.easing==='object'){animation.easing=config.easing.factory();}else{animation.easing=config.easing;}}return{type:'timing',onFrame:timing,onStart:onStart,progress:0,toValue:toValue,startValue:0,startTime:0,easing:function(){return 0;},current:toValue,callback:callback};});}}\";\n  _f.__workletHash = 2875714024024;\n  _f.__location = \"C:\\\\Users\\\\Mr. REEETARD\\\\Desktop\\\\FoodSeek\\\\foodseek\\\\src\\\\ui\\\\foodseek\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\timing.js (3:7)\";\n  return _f;\n}();\n\nexports.withTiming = withTiming;","map":{"version":3,"sources":["C:/Users/Mr. REEETARD/Desktop/FoodSeek/foodseek/src/ui/foodseek/node_modules/react-native-reanimated/lib/reanimated2/animation/timing.js"],"names":["withTiming","toValue","userConfig","callback","config","duration","easing","Easing","inOut","quad","Object","keys","forEach","key","timing","animation","now","startTime","startValue","runtime","current","progress","onStart","value","previousAnimation","type","factory","onFrame","defineAnimation"],"mappings":"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","sourcesContent":["import { Easing } from '../Easing';\r\nimport { defineAnimation } from './util';\r\nexport function withTiming(toValue, userConfig, callback) {\r\n    'worklet';\r\n    return defineAnimation(toValue, () => {\r\n        'worklet';\r\n        const config = {\r\n            duration: 300,\r\n            easing: Easing.inOut(Easing.quad),\r\n        };\r\n        if (userConfig) {\r\n            Object.keys(userConfig).forEach((key) => (config[key] = userConfig[key]));\r\n        }\r\n        function timing(animation, now) {\r\n            const { toValue, startTime, startValue } = animation;\r\n            const runtime = now - startTime;\r\n            if (runtime >= config.duration) {\r\n                // reset startTime to avoid reusing finished animation config in `start` method\r\n                animation.startTime = 0;\r\n                animation.current = toValue;\r\n                return true;\r\n            }\r\n            const progress = animation.easing(runtime / config.duration);\r\n            animation.current =\r\n                startValue + (toValue - startValue) * progress;\r\n            return false;\r\n        }\r\n        function onStart(animation, value, now, previousAnimation) {\r\n            if (previousAnimation &&\r\n                previousAnimation.type === 'timing' &&\r\n                previousAnimation.toValue === toValue &&\r\n                previousAnimation.startTime) {\r\n                // to maintain continuity of timing animations we check if we are starting\r\n                // new timing over the old one with the same parameters. If so, we want\r\n                // to copy animation timeline properties\r\n                animation.startTime = previousAnimation.startTime;\r\n                animation.startValue = previousAnimation.startValue;\r\n            }\r\n            else {\r\n                animation.startTime = now;\r\n                animation.startValue = value;\r\n            }\r\n            animation.current = value;\r\n            if (typeof config.easing === 'object') {\r\n                animation.easing = config.easing.factory();\r\n            }\r\n            else {\r\n                animation.easing = config.easing;\r\n            }\r\n        }\r\n        return {\r\n            type: 'timing',\r\n            onFrame: timing,\r\n            onStart: onStart,\r\n            progress: 0,\r\n            toValue,\r\n            startValue: 0,\r\n            startTime: 0,\r\n            easing: () => 0,\r\n            current: toValue,\r\n            callback,\r\n        };\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"script"}