{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Text = _interopRequireDefault(require(\"../Text/Text\"));\n\nvar _colors = require(\"../../constants/colors\");\n\nvar _vectorIcons = require(\"@expo/vector-icons\");\n\nvar _ThemeProvider = require(\"../../provider/ThemeProvider\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Mr. REEETARD\\\\Desktop\\\\FoodSeek\\\\foodseek\\\\src\\\\ui\\\\foodseek\\\\node_modules\\\\react-native-rapi-ui\\\\components\\\\Picker\\\\Picker.tsx\";\n\nvar _Dimensions$get = _reactNative.Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar Picker = function Picker(_ref) {\n  var items = _ref.items,\n      placeholder = _ref.placeholder,\n      value = _ref.value,\n      onValueChange = _ref.onValueChange,\n      borderColor = _ref.borderColor,\n      _ref$borderWidth = _ref.borderWidth,\n      borderWidth = _ref$borderWidth === void 0 ? 1 : _ref$borderWidth,\n      _ref$borderRadius = _ref.borderRadius,\n      borderRadius = _ref$borderRadius === void 0 ? 8 : _ref$borderRadius,\n      backgroundColor = _ref.backgroundColor,\n      selectionBackgroundColor = _ref.selectionBackgroundColor,\n      _ref$selectionBorderR = _ref.selectionBorderRadius,\n      selectionBorderRadius = _ref$selectionBorderR === void 0 ? 8 : _ref$selectionBorderR,\n      iconColor = _ref.iconColor,\n      labelColor = _ref.labelColor,\n      closeIconColor = _ref.closeIconColor,\n      _ref$labelSize = _ref.labelSize,\n      labelSize = _ref$labelSize === void 0 ? \"lg\" : _ref$labelSize,\n      _ref$placeholderSize = _ref.placeholderSize,\n      placeholderSize = _ref$placeholderSize === void 0 ? \"md\" : _ref$placeholderSize,\n      placeholderColor = _ref.placeholderColor,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled;\n\n  var _useTheme = (0, _ThemeProvider.useTheme)(),\n      theme = _useTheme.theme;\n\n  var selectedBorderColor = borderColor ? borderColor : _colors.component[theme].picker.borderColor;\n  var selectedBackgroundColor = backgroundColor ? backgroundColor : _colors.component[theme].picker.backgroundColor;\n  var selectedSelectionBackgroundColor = selectionBackgroundColor ? selectionBackgroundColor : _colors.component[theme].picker.selectionBackgroundColor;\n  var selectedIconColor = iconColor ? iconColor : _colors.component[theme].picker.iconColor;\n  var selectedLabelColor = labelColor ? labelColor : _colors.component[theme].picker.labelColor;\n  var selectedCloseIconColor = closeIconColor ? closeIconColor : _colors.component[theme].picker.closeIconColor;\n  var selectedPlaceholderColor = placeholderColor ? placeholderColor : _colors.component[theme].picker.placeholderColor;\n\n  var _React$useState = _react.default.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      toggleModal = _React$useState2[0],\n      setToggleModal = _React$useState2[1];\n\n  var selected = items.find(function (o) {\n    return o.value === value;\n  });\n\n  var _React$useState3 = _react.default.useState(value ? selected : null),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      selectedValue = _React$useState4[0],\n      setSelectedValue = _React$useState4[1];\n\n  var renderPickerItems = function renderPickerItems() {\n    return items.map(function (item, index) {\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        key: index,\n        onPress: function onPress() {\n          onValueChange && onValueChange(item.value);\n          setSelectedValue(item);\n          setToggleModal(!toggleModal);\n        },\n        style: {\n          paddingHorizontal: 20,\n          paddingVertical: 20\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_Text.default, {\n        style: {\n          color: selectedLabelColor\n        },\n        size: labelSize,\n        fontWeight: (selectedValue == null ? void 0 : selectedValue.value) == item.value ? \"bold\" : \"regular\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, item.label));\n    });\n  };\n\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: toggleModal,\n    onRequestClose: function onRequestClose() {\n      setToggleModal(!toggleModal);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"rgba(0,0,0,0.2)\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      backgroundColor: _colors.component[theme].picker.backgroundColor,\n      borderRadius: 8,\n      width: width - 40,\n      maxHeight: height - 300\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      padding: 20,\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      backgroundColor: selectedSelectionBackgroundColor,\n      borderRadius: selectionBorderRadius\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_Text.default, {\n    style: {\n      color: selectedLabelColor\n    },\n    fontWeight: \"bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, placeholder)), _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: function onPress() {\n      setToggleModal(!toggleModal);\n    },\n    style: {\n      height: 20,\n      width: 20,\n      borderRadius: 4,\n      backgroundColor: selectedCloseIconColor,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_vectorIcons.Ionicons, {\n    name: \"ios-close\",\n    size: 20,\n    color: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }))), _react.default.createElement(_reactNative.ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, renderPickerItems())))), _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: function onPress() {\n      setToggleModal(!toggleModal);\n    },\n    style: {\n      backgroundColor: selectedBackgroundColor,\n      borderColor: selectedBorderColor,\n      borderWidth: borderWidth,\n      borderRadius: borderRadius,\n      flexDirection: \"row\",\n      padding: 14,\n      paddingHorizontal: 20,\n      alignItems: \"center\",\n      justifyContent: \"space-between\"\n    },\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_Text.default, {\n    style: {\n      color: selectedValue ? selectedLabelColor : selectedPlaceholderColor,\n      marginRight: 5\n    },\n    size: placeholderSize,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, (selectedValue == null ? void 0 : selectedValue.label) || placeholder), _react.default.createElement(_vectorIcons.Ionicons, {\n    name: \"caret-down\",\n    size: 18,\n    color: selectedIconColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar _default = Picker;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/Mr. REEETARD/Desktop/FoodSeek/foodseek/src/ui/foodseek/node_modules/react-native-rapi-ui/components/Picker/Picker.tsx"],"names":["Dimensions","get","width","height","Picker","items","placeholder","value","onValueChange","borderColor","borderWidth","borderRadius","backgroundColor","selectionBackgroundColor","selectionBorderRadius","iconColor","labelColor","closeIconColor","labelSize","placeholderSize","placeholderColor","disabled","theme","selectedBorderColor","component","picker","selectedBackgroundColor","selectedSelectionBackgroundColor","selectedIconColor","selectedLabelColor","selectedCloseIconColor","selectedPlaceholderColor","React","useState","toggleModal","setToggleModal","selected","find","o","selectedValue","setSelectedValue","renderPickerItems","map","item","index","paddingHorizontal","paddingVertical","color","label","flex","justifyContent","alignItems","maxHeight","padding","flexDirection","marginRight"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ColorValue,\r\n  TextInput,\r\n  TextInputProps,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  Modal,\r\n  View,\r\n  ViewStyle,\r\n  ScrollView,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport Text from \"../Text/Text\";\r\nimport { component, themeColor } from \"../../constants/colors\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { fontSize } from \"../../constants/typography\";\r\nimport { useTheme } from \"../../provider/ThemeProvider\";\r\n\r\nconst { width, height } = Dimensions.get(\"screen\");\r\n\r\ninterface Props {\r\n  items: items[];\r\n  placeholder: string;\r\n  value?: string | null;\r\n  onValueChange?: (val: string) => void;\r\n  borderColor?: ColorValue;\r\n  borderWidth?: number;\r\n  borderRadius?: number;\r\n  backgroundColor?: ColorValue;\r\n  selectionBackgroundColor?: ColorValue;\r\n  selectionBorderRadius?: number;\r\n  iconColor?: ColorValue;\r\n  labelColor?: ColorValue;\r\n  closeIconColor?: ColorValue;\r\n  labelSize?: keyof typeof fontSize;\r\n  placeholderSize?: keyof typeof fontSize;\r\n  placeholderColor?: ColorValue;\r\n  disabled?: boolean;\r\n}\r\n\r\ninterface items {\r\n  label: string;\r\n  value: string;\r\n}\r\n\r\nconst Picker: React.FC<Props> = ({\r\n  items,\r\n  placeholder,\r\n  value,\r\n  onValueChange,\r\n  borderColor,\r\n  borderWidth = 1,\r\n  borderRadius = 8,\r\n  backgroundColor,\r\n  selectionBackgroundColor,\r\n  selectionBorderRadius = 8,\r\n  iconColor,\r\n  labelColor,\r\n  closeIconColor,\r\n  labelSize = \"lg\",\r\n  placeholderSize = \"md\",\r\n  placeholderColor,\r\n  disabled = false,\r\n}) => {\r\n  const { theme } = useTheme();\r\n\r\n  const selectedBorderColor = borderColor\r\n    ? borderColor\r\n    : component[theme].picker.borderColor;\r\n  const selectedBackgroundColor = backgroundColor\r\n    ? backgroundColor\r\n    : component[theme].picker.backgroundColor;\r\n  const selectedSelectionBackgroundColor = selectionBackgroundColor\r\n    ? selectionBackgroundColor\r\n    : component[theme].picker.selectionBackgroundColor;\r\n  const selectedIconColor = iconColor\r\n    ? iconColor\r\n    : component[theme].picker.iconColor;\r\n  const selectedLabelColor = labelColor\r\n    ? labelColor\r\n    : component[theme].picker.labelColor;\r\n  const selectedCloseIconColor = closeIconColor\r\n    ? closeIconColor\r\n    : component[theme].picker.closeIconColor;\r\n  const selectedPlaceholderColor = placeholderColor\r\n    ? placeholderColor\r\n    : component[theme].picker.placeholderColor;\r\n\r\n  const [toggleModal, setToggleModal] = React.useState(false);\r\n\r\n  const selected = items.find((o) => o.value === value);\r\n\r\n  const [selectedValue, setSelectedValue] = React.useState<\r\n    items | undefined | null\r\n  >(value ? selected : null);\r\n\r\n  const renderPickerItems = () => {\r\n    return items.map((item, index) => {\r\n      return (\r\n        <TouchableOpacity\r\n          key={index}\r\n          onPress={() => {\r\n            onValueChange && onValueChange(item.value);\r\n            setSelectedValue(item);\r\n            setToggleModal(!toggleModal);\r\n          }}\r\n          style={{\r\n            paddingHorizontal: 20,\r\n            paddingVertical: 20,\r\n          }}\r\n        >\r\n          <Text\r\n            style={{ color: selectedLabelColor }}\r\n            size={labelSize}\r\n            fontWeight={selectedValue?.value == item.value ? \"bold\" : \"regular\"}\r\n          >\r\n            {item.label}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        animationType=\"fade\"\r\n        transparent={true}\r\n        visible={toggleModal}\r\n        onRequestClose={() => {\r\n          setToggleModal(!toggleModal);\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: \"rgba(0,0,0,0.2)\",\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              backgroundColor: component[theme].picker.backgroundColor,\r\n              borderRadius: 8,\r\n              width: width - 40,\r\n              maxHeight: height - 300,\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                padding: 20,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n                backgroundColor: selectedSelectionBackgroundColor,\r\n                borderRadius: selectionBorderRadius,\r\n              }}\r\n            >\r\n              <View style={{ flex: 1 }}>\r\n                <Text style={{ color: selectedLabelColor }} fontWeight=\"bold\">\r\n                  {placeholder}\r\n                </Text>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  setToggleModal(!toggleModal);\r\n                }}\r\n                style={{\r\n                  height: 20,\r\n                  width: 20,\r\n                  borderRadius: 4,\r\n                  backgroundColor: selectedCloseIconColor,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                <Ionicons name=\"ios-close\" size={20} color=\"#fff\" />\r\n              </TouchableOpacity>\r\n            </View>\r\n            <ScrollView showsVerticalScrollIndicator={false}>\r\n              {renderPickerItems()}\r\n            </ScrollView>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      <TouchableOpacity\r\n        onPress={() => {\r\n          setToggleModal(!toggleModal);\r\n        }}\r\n        style={{\r\n          backgroundColor: selectedBackgroundColor,\r\n          borderColor: selectedBorderColor,\r\n          borderWidth: borderWidth,\r\n          borderRadius: borderRadius,\r\n          flexDirection: \"row\",\r\n          padding: 14,\r\n          paddingHorizontal: 20,\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n        disabled={disabled}\r\n      >\r\n        <Text\r\n          style={{\r\n            color: selectedValue\r\n              ? selectedLabelColor\r\n              : selectedPlaceholderColor,\r\n            marginRight: 5,\r\n          }}\r\n          size={placeholderSize}\r\n        >\r\n          {selectedValue?.label || placeholder}\r\n        </Text>\r\n        <Ionicons name=\"caret-down\" size={18} color={selectedIconColor} />\r\n      </TouchableOpacity>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Picker;\r\n"]},"metadata":{},"sourceType":"script"}