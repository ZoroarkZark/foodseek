{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useCode;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _base = require(\"../base\");\n\nfunction useCode(nodeFactory, dependencies) {\n  if (!(_react.default.useEffect instanceof Function)) return;\n\n  _react.default.useEffect(function () {\n    if (!(nodeFactory instanceof Function)) {\n      console.warn('useCode() first argument should be a function that returns an animation node.');\n      var _node = nodeFactory;\n\n      nodeFactory = function nodeFactory() {\n        return _node;\n      };\n    }\n\n    var node = nodeFactory();\n\n    if (node) {\n      if (node instanceof Array) node = (0, _base.block)(node);\n      var animatedAlways = (0, _base.always)(node);\n\n      animatedAlways.__attach();\n\n      return function () {\n        return animatedAlways.__detach();\n      };\n    }\n  }, dependencies);\n}","map":{"version":3,"sources":["C:/Users/Mr. REEETARD/Desktop/FoodSeek/foodseek/src/ui/foodseek/node_modules/react-native-reanimated/lib/reanimated1/derived/useCode.js"],"names":["useCode","nodeFactory","dependencies","React","useEffect","Function","console","warn","node","Array","animatedAlways","__attach","__detach"],"mappings":";;;;;;;AAAA;;AACA;;AAae,SAASA,OAAT,CAAiBC,WAAjB,EAA8BC,YAA9B,EAA4C;AACzD,MAAI,EAAEC,eAAMC,SAAN,YAA2BC,QAA7B,CAAJ,EAA4C;;AAE5CF,iBAAMC,SAAN,CAAgB,YAAM;AAEpB,QAAI,EAAEH,WAAW,YAAYI,QAAzB,CAAJ,EAAwC;AACtCC,MAAAA,OAAO,CAACC,IAAR,CACE,+EADF;AAIA,UAAMC,KAAI,GAAGP,WAAb;;AACAA,MAAAA,WAAW,GAAG;AAAA,eAAMO,KAAN;AAAA,OAAd;AACD;;AAED,QAAIA,IAAI,GAAGP,WAAW,EAAtB;;AACA,QAAIO,IAAJ,EAAU;AAER,UAAIA,IAAI,YAAYC,KAApB,EAA2BD,IAAI,GAAG,iBAAMA,IAAN,CAAP;AAE3B,UAAME,cAAc,GAAG,kBAAOF,IAAP,CAAvB;;AACAE,MAAAA,cAAc,CAACC,QAAf;;AAGA,aAAO;AAAA,eAAMD,cAAc,CAACE,QAAf,EAAN;AAAA,OAAP;AACD;AACF,GAtBD,EAsBGV,YAtBH;AAuBD","sourcesContent":["import React from 'react';\r\nimport { always, block } from '../base';\r\n\r\n/**\r\n * @callback NodeFactory\r\n * Function to create a node or an array of nodes.\r\n * @returns {(Node[] | Node | null | undefined | Boolean)}\r\n */\r\n\r\n/**\r\n * React hook to run a node.\r\n * @param {NodeFactory} nodeFactory Function to build the node to run.\r\n * @param dependencies Array of dependencies. Refresh the node on changes.\r\n */\r\nexport default function useCode(nodeFactory, dependencies) {\r\n  if (!(React.useEffect instanceof Function)) return;\r\n\r\n  React.useEffect(() => {\r\n    // check and correct 1st parameter\r\n    if (!(nodeFactory instanceof Function)) {\r\n      console.warn(\r\n        'useCode() first argument should be a function that returns an animation node.'\r\n      );\r\n\r\n      const node = nodeFactory;\r\n      nodeFactory = () => node;\r\n    }\r\n\r\n    let node = nodeFactory();\r\n    if (node) {\r\n      // allow factory to return array\r\n      if (node instanceof Array) node = block(node);\r\n\r\n      const animatedAlways = always(node);\r\n      animatedAlways.__attach();\r\n\r\n      // return undo function\r\n      return () => animatedAlways.__detach();\r\n    }\r\n  }, dependencies);\r\n}\r\n"]},"metadata":{},"sourceType":"script"}