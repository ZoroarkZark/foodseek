{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EatSignupScreen = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Mr. REEETARD\\\\Desktop\\\\FoodSeek\\\\foodseek\\\\src\\\\ui\\\\foodseek\\\\src\\\\screens\\\\eatersignup.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar EatSignupScreen = function EatSignupScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(''),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      userEmail = _useState4[0],\n      setUserEmail = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(''),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      userPassword = _useState6[0],\n      setUserPassword = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(''),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      errortext = _useState8[0],\n      setErrortext = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(false),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      isVendor = _useState10[0],\n      setIsVendor = _useState10[1];\n\n  var _useState11 = (0, _react.useState)(false),\n      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n      isRegistration = _useState12[0],\n      setIsRegistration = _useState12[1];\n\n  var emailInputRef = (0, _react.createRef)();\n  var ageInputRef = (0, _react.createRef)();\n  var addressInputRef = (0, _react.createRef)();\n  var passwordInputRef = (0, _react.createRef)();\n\n  var handleButton = function handleButton() {\n    setErrortext('');\n\n    if (!userName) {\n      alert('Need info on username. Please fill in.');\n      return;\n    }\n\n    if (!userEmail) {\n      alert('Need info on user email. Please fill in.');\n      return;\n    }\n\n    if (!userPassword) {\n      alert('Need info on user password. Please fill in.');\n      return;\n    }\n\n    var dataToSend = {\n      name: userName,\n      email: userEmail,\n      password: userPassword\n    };\n    var formBody = [];\n\n    for (var key in dataToSend) {\n      var encodedKey = encodeURIComponent(key);\n      var encodedValue = encodeURIComponent(dataToSend[key]);\n      formBody.push(encodedKey + '=' + encodedValue);\n    }\n\n    formBody = formBody.join('&');\n  };\n\n  _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#307ecc'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.ScrollView, {\n    keyboardShouldPersistTaps: \"handled\",\n    contentContainerStyle: {\n      justifyContent: 'center',\n      alignContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.KeyboardAvoidingView, {\n    enabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserName) {\n      return setUserName(UserName);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Name\",\n    placeholderTextColor: \"#8b9cb5\",\n    autoCapitalize: \"sentences\",\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return emailInputRef.current && emailInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserEmail) {\n      return setUserEmail(UserEmail);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Email\",\n    placeholderTextColor: \"#8b9cb5\",\n    keyboardType: \"email-address\",\n    ref: emailInputRef,\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return passwordInputRef.current && passwordInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.SectionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.TextInput, {\n    style: styles.inputStyle,\n    onChangeText: function onChangeText(UserPassword) {\n      return setUserPassword(UserPassword);\n    },\n    underlineColorAndroid: \"#f000\",\n    placeholder: \"Enter Password\",\n    placeholderTextColor: \"#8b9cb5\",\n    ref: passwordInputRef,\n    returnKeyType: \"next\",\n    secureTextEntry: true,\n    onSubmitEditing: function onSubmitEditing() {\n      return ageInputRef.current && ageInputRef.current.focus();\n    },\n    blurOnSubmit: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  })), errortext != '' ? _react.default.createElement(_reactNative.Text, {\n    style: styles.errorTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, errortext) : null, _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: styles.buttonStyle,\n    activeOpacity: 0.5,\n    onPress: handleButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: styles.buttonTextStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"REGISTER\")))));\n};\n\nexports.EatSignupScreen = EatSignupScreen;\n\nvar styles = _reactNative.StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10\n  },\n  buttonStyle: {\n    backgroundColor: '#7DE24E',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'white',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8'\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14\n  },\n  successTextStyle: {\n    color: 'white',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/Mr. REEETARD/Desktop/FoodSeek/foodseek/src/ui/foodseek/src/screens/eatersignup.js"],"names":["EatSignupScreen","navigation","userName","setUserName","userEmail","setUserEmail","userPassword","setUserPassword","errortext","setErrortext","isVendor","setIsVendor","isRegistration","setIsRegistration","emailInputRef","ageInputRef","addressInputRef","passwordInputRef","handleButton","alert","dataToSend","name","email","password","formBody","key","encodedKey","encodeURIComponent","encodedValue","push","join","flex","backgroundColor","justifyContent","alignContent","styles","SectionStyle","inputStyle","UserName","current","focus","UserEmail","UserPassword","errorTextStyle","buttonStyle","buttonTextStyle","StyleSheet","create","flexDirection","height","marginTop","marginLeft","marginRight","margin","borderWidth","color","borderColor","alignItems","borderRadius","marginBottom","paddingVertical","fontSize","paddingLeft","paddingRight","textAlign","successTextStyle","padding"],"mappings":"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","sourcesContent":["import React, {useState, createRef} from 'react';\r\nimport {\r\n  StyleSheet,\r\n  TextInput,\r\n  View,\r\n  Text,\r\n  Image,\r\n  KeyboardAvoidingView,\r\n  Keyboard,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from 'react-native';\r\n/*\r\nIntended functionality: Came from Sign-up page. Now at \"Eater Sign-up\" page. \r\n\r\nEater form information examples: Name, Email, Income.\r\nStore this information in the cloud, ideally; might be hard to let SQL database run all of the information.\r\n*/\r\nexport const EatSignupScreen = ({ navigation }) => {\r\n\r\n\r\n//Source for inspiration: https://aboutreact.com/react-native-login-and-signup/\r\n  const [userName, setUserName] = useState('');\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n  const [errortext, setErrortext] = useState('');\r\n  const [isVendor, setIsVendor] = useState(false);\r\n  const [isRegistration, setIsRegistration] = useState(false);\r\n\r\n  const emailInputRef = createRef();\r\n  const ageInputRef = createRef();\r\n  const addressInputRef = createRef();\r\n  const passwordInputRef = createRef();\r\n\r\n  \r\n  const handleButton = () => {\r\n    setErrortext('');\r\n    //Errors if fields not filled in. In order, username, email, created password.\r\n    if (!userName){\r\n        alert ('Need info on username. Please fill in.');\r\n        return;\r\n    }\r\n    if (!userEmail){\r\n        alert ('Need info on user email. Please fill in.');\r\n        return;\r\n    }\r\n    if (!userPassword){\r\n        alert ('Need info on user password. Please fill in.');\r\n        return;\r\n    }\r\n    //Store the information you do get into this, if you do receive info.\r\n    var dataToSend = {\r\n        name: userName,\r\n        email: userEmail,\r\n        password: userPassword,\r\n      };\r\n      //Keep information into a JSON string, coded by key and value.\r\n      var formBody = [];\r\n      for (var key in dataToSend) {\r\n        var encodedKey = encodeURIComponent(key);\r\n        var encodedValue = encodeURIComponent(dataToSend[key]);\r\n        formBody.push(encodedKey + '=' + encodedValue);\r\n      }\r\n      formBody = formBody.join('&');\r\n      //We now have a pretty valid JSON string, made with the key and value given.\r\n      //What we should do with this JSON string is to utilize it to sign up a user.\r\n    };\r\n    <View style={{flex: 1, backgroundColor: '#307ecc'}}>\r\n      <ScrollView\r\n        keyboardShouldPersistTaps=\"handled\"\r\n        contentContainerStyle={{\r\n          justifyContent: 'center',\r\n          alignContent: 'center',\r\n        }}>\r\n        <KeyboardAvoidingView enabled>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={(UserName) => setUserName(UserName)}\r\n              underlineColorAndroid=\"#f000\"\r\n              placeholder=\"Enter Name\"\r\n              placeholderTextColor=\"#8b9cb5\"\r\n              autoCapitalize=\"sentences\"\r\n              returnKeyType=\"next\"\r\n              onSubmitEditing={() =>\r\n                emailInputRef.current && emailInputRef.current.focus()\r\n              }\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={(UserEmail) => setUserEmail(UserEmail)}\r\n              underlineColorAndroid=\"#f000\"\r\n              placeholder=\"Enter Email\"\r\n              placeholderTextColor=\"#8b9cb5\"\r\n              keyboardType=\"email-address\"\r\n              ref={emailInputRef}\r\n              returnKeyType=\"next\"\r\n              onSubmitEditing={() =>\r\n                passwordInputRef.current &&\r\n                passwordInputRef.current.focus()\r\n              }\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n          <View style={styles.SectionStyle}>\r\n            <TextInput\r\n              style={styles.inputStyle}\r\n              onChangeText={(UserPassword) =>\r\n                setUserPassword(UserPassword)\r\n              }\r\n              underlineColorAndroid=\"#f000\"\r\n              placeholder=\"Enter Password\"\r\n              placeholderTextColor=\"#8b9cb5\"\r\n              ref={passwordInputRef}\r\n              returnKeyType=\"next\"\r\n              secureTextEntry={true}\r\n              onSubmitEditing={() =>\r\n                ageInputRef.current &&\r\n                ageInputRef.current.focus()\r\n              }\r\n              blurOnSubmit={false}\r\n            />\r\n          </View>\r\n            {errortext != '' ? (\r\n            <Text style={styles.errorTextStyle}>\r\n              {errortext}\r\n            </Text>\r\n            ) : null}\r\n          <TouchableOpacity\r\n            style={styles.buttonStyle}\r\n            activeOpacity={0.5}\r\n            onPress={handleButton}>\r\n            <Text style={styles.buttonTextStyle}>REGISTER</Text>\r\n          </TouchableOpacity>\r\n            </KeyboardAvoidingView>\r\n          </ScrollView>\r\n        </View>\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    SectionStyle: {\r\n      flexDirection: 'row',\r\n      height: 40,\r\n      marginTop: 20,\r\n      marginLeft: 35,\r\n      marginRight: 35,\r\n      margin: 10,\r\n    },\r\n    buttonStyle: {\r\n      backgroundColor: '#7DE24E',\r\n      borderWidth: 0,\r\n      color: '#FFFFFF',\r\n      borderColor: '#7DE24E',\r\n      height: 40,\r\n      alignItems: 'center',\r\n      borderRadius: 30,\r\n      marginLeft: 35,\r\n      marginRight: 35,\r\n      marginTop: 20,\r\n      marginBottom: 20,\r\n    },\r\n    buttonTextStyle: {\r\n      color: '#FFFFFF',\r\n      paddingVertical: 10,\r\n      fontSize: 16,\r\n    },\r\n    inputStyle: {\r\n      flex: 1,\r\n      color: 'white',\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n      borderWidth: 1,\r\n      borderRadius: 30,\r\n      borderColor: '#dadae8',\r\n    },\r\n    errorTextStyle: {\r\n      color: 'red',\r\n      textAlign: 'center',\r\n      fontSize: 14,\r\n    },\r\n    successTextStyle: {\r\n      color: 'white',\r\n      textAlign: 'center',\r\n      fontSize: 18,\r\n      padding: 30,\r\n    },\r\n  });"]},"metadata":{},"sourceType":"script"}