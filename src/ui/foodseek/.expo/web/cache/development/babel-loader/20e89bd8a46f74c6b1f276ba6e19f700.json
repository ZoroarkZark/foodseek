{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _MapperRegistry = _interopRequireDefault(require(\"./MapperRegistry\"));\n\nvar _Mapper = _interopRequireDefault(require(\"./Mapper\"));\n\nvar _MutableValue = _interopRequireDefault(require(\"./MutableValue\"));\n\nvar _NativeReanimated2 = require(\"../NativeReanimated/NativeReanimated\");\n\nvar _PlatformChecker = require(\"../PlatformChecker\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar JSReanimated = function (_NativeReanimated) {\n  (0, _inherits2.default)(JSReanimated, _NativeReanimated);\n\n  var _super = _createSuper(JSReanimated);\n\n  function JSReanimated() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, JSReanimated);\n    _this = _super.call(this, false);\n    _this._valueSetter = undefined;\n    _this._renderRequested = false;\n    _this._mapperRegistry = new _MapperRegistry.default((0, _assertThisInitialized2.default)(_this));\n    _this._frames = [];\n\n    if ((0, _PlatformChecker.isJest)()) {\n      _this.timeProvider = {\n        now: function now() {\n          return global.ReanimatedDataMock.now();\n        }\n      };\n    } else {\n      _this.timeProvider = {\n        now: function now() {\n          return window.performance.now();\n        }\n      };\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(JSReanimated, [{\n    key: \"pushFrame\",\n    value: function pushFrame(frame) {\n      this._frames.push(frame);\n\n      this.maybeRequestRender();\n    }\n  }, {\n    key: \"getTimestamp\",\n    value: function getTimestamp() {\n      return this.timeProvider.now();\n    }\n  }, {\n    key: \"maybeRequestRender\",\n    value: function maybeRequestRender() {\n      var _this2 = this;\n\n      if (!this._renderRequested) {\n        this._renderRequested = true;\n        requestAnimationFrame(function (_timestampMs) {\n          _this2._renderRequested = false;\n\n          _this2._onRender(_this2.getTimestamp());\n        });\n      }\n    }\n  }, {\n    key: \"_onRender\",\n    value: function _onRender(timestampMs) {\n      this._mapperRegistry.execute();\n\n      var frames = (0, _toConsumableArray2.default)(this._frames);\n      this._frames = [];\n\n      for (var i = 0, len = frames.length; i < len; ++i) {\n        frames[i](timestampMs);\n      }\n\n      if (this._mapperRegistry.needRunOnRender) {\n        this._mapperRegistry.execute();\n      }\n    }\n  }, {\n    key: \"installCoreFunctions\",\n    value: function installCoreFunctions(valueSetter) {\n      this._valueSetter = valueSetter;\n    }\n  }, {\n    key: \"makeShareable\",\n    value: function makeShareable(value) {\n      return value;\n    }\n  }, {\n    key: \"makeMutable\",\n    value: function makeMutable(value) {\n      return new _MutableValue.default(value, this._valueSetter);\n    }\n  }, {\n    key: \"makeRemote\",\n    value: function makeRemote() {\n      var object = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return object;\n    }\n  }, {\n    key: \"startMapper\",\n    value: function startMapper(mapper) {\n      var inputs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var outputs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var instance = new _Mapper.default(this, mapper, inputs, outputs);\n\n      var mapperId = this._mapperRegistry.startMapper(instance);\n\n      this.maybeRequestRender();\n      return mapperId;\n    }\n  }, {\n    key: \"stopMapper\",\n    value: function stopMapper(mapperId) {\n      this._mapperRegistry.stopMapper(mapperId);\n    }\n  }, {\n    key: \"registerEventHandler\",\n    value: function registerEventHandler(_, __) {\n      return '';\n    }\n  }, {\n    key: \"unregisterEventHandler\",\n    value: function unregisterEventHandler(_) {}\n  }, {\n    key: \"enableLayoutAnimations\",\n    value: function enableLayoutAnimations() {\n      console.warn('[Reanimated] enableLayoutAnimations is not available for WEB yet');\n    }\n  }, {\n    key: \"registerSensor\",\n    value: function registerSensor() {\n      console.warn('[Reanimated] useAnimatedSensor is not available on web yet.');\n      return -1;\n    }\n  }, {\n    key: \"unregisterSensor\",\n    value: function unregisterSensor() {}\n  }, {\n    key: \"jestResetModule\",\n    value: function jestResetModule() {\n      if ((0, _PlatformChecker.isJest)()) {\n        this._renderRequested = false;\n      } else {\n        throw Error('This method can be only use in Jest testing.');\n      }\n    }\n  }]);\n  return JSReanimated;\n}(_NativeReanimated2.NativeReanimated);\n\nexports.default = JSReanimated;","map":{"version":3,"sources":["C:/Users/Mr. REEETARD/Desktop/FoodSeek/foodseek/src/ui/foodseek/node_modules/react-native-reanimated/lib/reanimated2/js-reanimated/JSReanimated.js"],"names":["JSReanimated","_valueSetter","undefined","_renderRequested","_mapperRegistry","MapperRegistry","_frames","timeProvider","now","global","ReanimatedDataMock","window","performance","frame","push","maybeRequestRender","requestAnimationFrame","_timestampMs","_onRender","getTimestamp","timestampMs","execute","frames","i","len","length","needRunOnRender","valueSetter","value","MutableValue","object","mapper","inputs","outputs","instance","Mapper","mapperId","startMapper","stopMapper","_","__","console","warn","Error","NativeReanimated"],"mappings":"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","sourcesContent":["import MapperRegistry from './MapperRegistry';\r\nimport Mapper from './Mapper';\r\nimport MutableValue from './MutableValue';\r\nimport { NativeReanimated } from '../NativeReanimated/NativeReanimated';\r\nimport { isJest } from '../PlatformChecker';\r\nexport default class JSReanimated extends NativeReanimated {\r\n    constructor() {\r\n        super(false);\r\n        this._valueSetter = undefined;\r\n        this._renderRequested = false;\r\n        this._mapperRegistry = new MapperRegistry(this);\r\n        this._frames = [];\r\n        if (isJest()) {\r\n            this.timeProvider = { now: () => global.ReanimatedDataMock.now() };\r\n        }\r\n        else {\r\n            this.timeProvider = { now: () => window.performance.now() };\r\n        }\r\n    }\r\n    pushFrame(frame) {\r\n        this._frames.push(frame);\r\n        this.maybeRequestRender();\r\n    }\r\n    getTimestamp() {\r\n        return this.timeProvider.now();\r\n    }\r\n    maybeRequestRender() {\r\n        if (!this._renderRequested) {\r\n            this._renderRequested = true;\r\n            requestAnimationFrame((_timestampMs) => {\r\n                this._renderRequested = false;\r\n                this._onRender(this.getTimestamp());\r\n            });\r\n        }\r\n    }\r\n    _onRender(timestampMs) {\r\n        this._mapperRegistry.execute();\r\n        const frames = [...this._frames];\r\n        this._frames = [];\r\n        for (let i = 0, len = frames.length; i < len; ++i) {\r\n            frames[i](timestampMs);\r\n        }\r\n        if (this._mapperRegistry.needRunOnRender) {\r\n            this._mapperRegistry.execute();\r\n        }\r\n    }\r\n    installCoreFunctions(valueSetter) {\r\n        this._valueSetter = valueSetter;\r\n    }\r\n    makeShareable(value) {\r\n        return value;\r\n    }\r\n    makeMutable(value) {\r\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n        return new MutableValue(value, this._valueSetter);\r\n    }\r\n    makeRemote(object = {}) {\r\n        return object;\r\n    }\r\n    startMapper(mapper, inputs = [], outputs = []) {\r\n        const instance = new Mapper(this, mapper, inputs, outputs);\r\n        const mapperId = this._mapperRegistry.startMapper(instance);\r\n        this.maybeRequestRender();\r\n        return mapperId;\r\n    }\r\n    stopMapper(mapperId) {\r\n        this._mapperRegistry.stopMapper(mapperId);\r\n    }\r\n    registerEventHandler(_, __) {\r\n        // noop\r\n        return '';\r\n    }\r\n    unregisterEventHandler(_) {\r\n        // noop\r\n    }\r\n    enableLayoutAnimations() {\r\n        console.warn('[Reanimated] enableLayoutAnimations is not available for WEB yet');\r\n    }\r\n    registerSensor() {\r\n        console.warn('[Reanimated] useAnimatedSensor is not available on web yet.');\r\n        return -1;\r\n    }\r\n    unregisterSensor() {\r\n        // noop\r\n    }\r\n    jestResetModule() {\r\n        if (isJest()) {\r\n            /**\r\n             * If someone used timers to stop animation before the end,\r\n             * then _renderRequested was set as true\r\n             * and any new update from another test wasn't applied.\r\n             */\r\n            this._renderRequested = false;\r\n        }\r\n        else {\r\n            throw Error('This method can be only use in Jest testing.');\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}