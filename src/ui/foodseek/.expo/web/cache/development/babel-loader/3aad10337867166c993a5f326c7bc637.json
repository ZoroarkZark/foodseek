{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = decayAnimation;\n\nvar _base = require(\"../base\");\n\nvar VELOCITY_EPS = 5;\n\nfunction decay(clock, state, config) {\n  var lastTime = (0, _base.cond)(state.time, state.time, clock);\n  var deltaTime = (0, _base.sub)(clock, lastTime);\n  var kv = (0, _base.pow)(config.deceleration, deltaTime);\n  var kx = (0, _base.divide)((0, _base.multiply)(config.deceleration, (0, _base.sub)(1, kv)), (0, _base.sub)(1, config.deceleration));\n  var v0 = (0, _base.divide)(state.velocity, 1000);\n  var v = (0, _base.multiply)(v0, kv, 1000);\n  var x = (0, _base.add)(state.position, (0, _base.multiply)(v0, kx));\n  return (0, _base.block)([(0, _base.set)(state.position, x), (0, _base.set)(state.velocity, v), (0, _base.set)(state.time, clock), (0, _base.cond)((0, _base.lessThan)((0, _base.abs)(v), VELOCITY_EPS), (0, _base.set)(state.finished, 1))]);\n}\n\nvar procDecay = (0, _base.proc)(function (clock, time, velocity, position, finished, deceleration) {\n  return decay(clock, {\n    time: time,\n    velocity: velocity,\n    position: position,\n    finished: finished\n  }, {\n    deceleration: deceleration\n  });\n});\n\nfunction decayAnimation(clock, _ref, _ref2) {\n  var time = _ref.time,\n      velocity = _ref.velocity,\n      position = _ref.position,\n      finished = _ref.finished;\n  var deceleration = _ref2.deceleration;\n  return procDecay(clock, time, velocity, position, finished, deceleration);\n}","map":{"version":3,"sources":["C:/Users/Mr. REEETARD/Desktop/FoodSeek/foodseek/src/ui/foodseek/node_modules/react-native-reanimated/lib/reanimated1/animations/decay.js"],"names":["VELOCITY_EPS","decay","clock","state","config","lastTime","time","deltaTime","kv","deceleration","kx","v0","velocity","v","x","position","finished","procDecay","decayAnimation"],"mappings":";;;;;AAAA;;AAcA,IAAMA,YAAY,GAAG,CAArB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACnC,MAAMC,QAAQ,GAAG,gBAAKF,KAAK,CAACG,IAAX,EAAiBH,KAAK,CAACG,IAAvB,EAA6BJ,KAA7B,CAAjB;AACA,MAAMK,SAAS,GAAG,eAAIL,KAAJ,EAAWG,QAAX,CAAlB;AAQA,MAAMG,EAAE,GAAG,eAAIJ,MAAM,CAACK,YAAX,EAAyBF,SAAzB,CAAX;AACA,MAAMG,EAAE,GAAG,kBACT,oBAASN,MAAM,CAACK,YAAhB,EAA8B,eAAI,CAAJ,EAAOD,EAAP,CAA9B,CADS,EAET,eAAI,CAAJ,EAAOJ,MAAM,CAACK,YAAd,CAFS,CAAX;AAIA,MAAME,EAAE,GAAG,kBAAOR,KAAK,CAACS,QAAb,EAAuB,IAAvB,CAAX;AACA,MAAMC,CAAC,GAAG,oBAASF,EAAT,EAAaH,EAAb,EAAiB,IAAjB,CAAV;AACA,MAAMM,CAAC,GAAG,eAAIX,KAAK,CAACY,QAAV,EAAoB,oBAASJ,EAAT,EAAaD,EAAb,CAApB,CAAV;AACA,SAAO,iBAAM,CACX,eAAIP,KAAK,CAACY,QAAV,EAAoBD,CAApB,CADW,EAEX,eAAIX,KAAK,CAACS,QAAV,EAAoBC,CAApB,CAFW,EAGX,eAAIV,KAAK,CAACG,IAAV,EAAgBJ,KAAhB,CAHW,EAIX,gBAAK,oBAAS,eAAIW,CAAJ,CAAT,EAAiBb,YAAjB,CAAL,EAAqC,eAAIG,KAAK,CAACa,QAAV,EAAoB,CAApB,CAArC,CAJW,CAAN,CAAP;AAMD;;AAED,IAAMC,SAAS,GAAG,gBAChB,UAACf,KAAD,EAAQI,IAAR,EAAcM,QAAd,EAAwBG,QAAxB,EAAkCC,QAAlC,EAA4CP,YAA5C;AAAA,SACER,KAAK,CAACC,KAAD,EAAQ;AAAEI,IAAAA,IAAI,EAAJA,IAAF;AAAQM,IAAAA,QAAQ,EAARA,QAAR;AAAkBG,IAAAA,QAAQ,EAARA,QAAlB;AAA4BC,IAAAA,QAAQ,EAARA;AAA5B,GAAR,EAAgD;AAAEP,IAAAA,YAAY,EAAZA;AAAF,GAAhD,CADP;AAAA,CADgB,CAAlB;;AAKe,SAASS,cAAT,CACbhB,KADa,eAIb;AAAA,MAFEI,IAEF,QAFEA,IAEF;AAAA,MAFQM,QAER,QAFQA,QAER;AAAA,MAFkBG,QAElB,QAFkBA,QAElB;AAAA,MAF4BC,QAE5B,QAF4BA,QAE5B;AAAA,MADEP,YACF,SADEA,YACF;AACA,SAAOQ,SAAS,CAACf,KAAD,EAAQI,IAAR,EAAcM,QAAd,EAAwBG,QAAxB,EAAkCC,QAAlC,EAA4CP,YAA5C,CAAhB;AACD","sourcesContent":["import {\r\n  cond,\r\n  sub,\r\n  pow,\r\n  divide,\r\n  multiply,\r\n  add,\r\n  block,\r\n  set,\r\n  lessThan,\r\n  proc,\r\n  abs,\r\n} from '../base';\r\n\r\nconst VELOCITY_EPS = 5;\r\n\r\nfunction decay(clock, state, config) {\r\n  const lastTime = cond(state.time, state.time, clock);\r\n  const deltaTime = sub(clock, lastTime);\r\n\r\n  // v0 = v / 1000\r\n  // v = v0 * powf(deceleration, dt);\r\n  // v = v * 1000;\r\n\r\n  // x0 = x;\r\n  // x = x0 + v0 * deceleration * (1 - powf(deceleration, dt)) / (1 - deceleration)\r\n  const kv = pow(config.deceleration, deltaTime);\r\n  const kx = divide(\r\n    multiply(config.deceleration, sub(1, kv)),\r\n    sub(1, config.deceleration)\r\n  );\r\n  const v0 = divide(state.velocity, 1000);\r\n  const v = multiply(v0, kv, 1000);\r\n  const x = add(state.position, multiply(v0, kx));\r\n  return block([\r\n    set(state.position, x),\r\n    set(state.velocity, v),\r\n    set(state.time, clock),\r\n    cond(lessThan(abs(v), VELOCITY_EPS), set(state.finished, 1)),\r\n  ]);\r\n}\r\n\r\nconst procDecay = proc(\r\n  (clock, time, velocity, position, finished, deceleration) =>\r\n    decay(clock, { time, velocity, position, finished }, { deceleration })\r\n);\r\n\r\nexport default function decayAnimation(\r\n  clock,\r\n  { time, velocity, position, finished },\r\n  { deceleration }\r\n) {\r\n  return procDecay(clock, time, velocity, position, finished, deceleration);\r\n}\r\n"]},"metadata":{},"sourceType":"script"}