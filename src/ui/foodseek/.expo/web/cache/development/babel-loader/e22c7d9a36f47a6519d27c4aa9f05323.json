{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withStyleAnimation = exports.setPath = exports.resolvePath = void 0;\n\nvar _util = require(\"./util\");\n\nvar _timing = require(\"./timing\");\n\nvar _UpdateProps = require(\"../UpdateProps\");\n\nvar _Colors = require(\"../Colors\");\n\nvar resolvePath = function () {\n  var _f = function _f(obj, path) {\n    var keys = Array.isArray(path) ? path : [path];\n    return keys.reduce(function (acc, current) {\n      if (Array.isArray(acc) && typeof current === 'number') {\n        return acc[current];\n      } else if (typeof acc === 'object' && current in acc) {\n        return acc[current];\n      }\n\n      return undefined;\n    }, obj);\n  };\n\n  _f._closure = {};\n  _f.asString = \"function resolvePath(obj,path){const keys=Array.isArray(path)?path:[path];return keys.reduce(function(acc,current){if(Array.isArray(acc)&&typeof current==='number'){return acc[current];}else if(typeof acc==='object'&&current in acc){return acc[current];}return undefined;},obj);}\";\n  _f.__workletHash = 6802843237952;\n  _f.__location = \"C:\\\\Users\\\\Mr. REEETARD\\\\Desktop\\\\FoodSeek\\\\foodseek\\\\src\\\\ui\\\\foodseek\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\styleAnimation.js (7:7)\";\n  return _f;\n}();\n\nexports.resolvePath = resolvePath;\n\nvar setPath = function () {\n  var _f = function _f(obj, path, value) {\n    var keys = Array.isArray(path) ? path : [path];\n    var currObj = obj;\n\n    for (var i = 0; i < keys.length - 1; i++) {\n      currObj = currObj;\n\n      if (!currObj[keys[i]]) {\n        if (typeof keys[i + 1] === 'number') {\n          currObj[keys[i]] = [];\n        } else {\n          currObj[keys[i]] = {};\n        }\n      }\n\n      currObj = currObj[keys[i]];\n    }\n\n    currObj[keys[keys.length - 1]] = value;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function setPath(obj,path,value){const keys=Array.isArray(path)?path:[path];let currObj=obj;for(let i=0;i<keys.length-1;i++){currObj=currObj;if(!currObj[keys[i]]){if(typeof keys[i+1]==='number'){currObj[keys[i]]=[];}else{currObj[keys[i]]={};}}currObj=currObj[keys[i]];}currObj[keys[keys.length-1]]=value;}\";\n  _f.__workletHash = 16252556056779;\n  _f.__location = \"C:\\\\Users\\\\Mr. REEETARD\\\\Desktop\\\\FoodSeek\\\\foodseek\\\\src\\\\ui\\\\foodseek\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\styleAnimation.js (20:7)\";\n  return _f;\n}();\n\nexports.setPath = setPath;\n\nvar withStyleAnimation = function () {\n  var _f = function _f(styleAnimations) {\n    return (0, _util.defineAnimation)({}, function () {\n      var _f = function _f() {\n        var onFrame = function onFrame(animation, now) {\n          var stillGoing = false;\n          var entriesToCheck = [{\n            value: animation.styleAnimations,\n            path: []\n          }];\n\n          while (entriesToCheck.length > 0) {\n            var currentEntry = entriesToCheck.pop();\n\n            if (Array.isArray(currentEntry.value)) {\n              for (var index = 0; index < currentEntry.value.length; index++) {\n                entriesToCheck.push({\n                  value: currentEntry.value[index],\n                  path: currentEntry.path.concat(index)\n                });\n              }\n            } else if (typeof currentEntry.value === 'object' && currentEntry.value.onFrame === undefined) {\n              for (var key of Object.keys(currentEntry.value)) {\n                entriesToCheck.push({\n                  value: currentEntry.value[key],\n                  path: currentEntry.path.concat(key)\n                });\n              }\n            } else {\n              var currentStyleAnimation = currentEntry.value;\n\n              if (currentStyleAnimation.finished) {\n                continue;\n              }\n\n              var finished = currentStyleAnimation.onFrame(currentStyleAnimation, now);\n\n              if (finished) {\n                currentStyleAnimation.finished = true;\n\n                if (currentStyleAnimation.callback) {\n                  currentStyleAnimation.callback(true);\n                }\n              } else {\n                stillGoing = true;\n              }\n\n              if (_UpdateProps.ColorProperties.includes(currentEntry.path[0])) {\n                currentStyleAnimation.current = (0, _Colors.processColor)(currentStyleAnimation.current);\n              }\n\n              setPath(animation.current, currentEntry.path, currentStyleAnimation.current);\n            }\n          }\n\n          return !stillGoing;\n        };\n\n        var onStart = function onStart(animation, value, now, previousAnimation) {\n          var entriesToCheck = [{\n            value: styleAnimations,\n            path: []\n          }];\n\n          while (entriesToCheck.length > 0) {\n            var currentEntry = entriesToCheck.pop();\n\n            if (Array.isArray(currentEntry.value)) {\n              for (var index = 0; index < currentEntry.value.length; index++) {\n                entriesToCheck.push({\n                  value: currentEntry.value[index],\n                  path: currentEntry.path.concat(index)\n                });\n              }\n            } else if (typeof currentEntry.value === 'object' && currentEntry.value.onStart === undefined) {\n              for (var key of Object.keys(currentEntry.value)) {\n                entriesToCheck.push({\n                  value: currentEntry.value[key],\n                  path: currentEntry.path.concat(key)\n                });\n              }\n            } else {\n              var prevAnimation = resolvePath(previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.styleAnimations, currentEntry.path);\n              var prevVal = resolvePath(value, currentEntry.path);\n\n              if (prevAnimation && !prevVal) {\n                prevVal = prevAnimation.current;\n              }\n\n              setPath(animation.current, currentEntry.path, prevVal);\n              var currentAnimation = void 0;\n\n              if (typeof currentEntry.value !== 'object' || !currentEntry.value.onStart) {\n                currentAnimation = (0, _timing.withTiming)(currentEntry.value, {\n                  duration: 0\n                });\n                setPath(animation.styleAnimations, currentEntry.path, currentAnimation);\n              } else {\n                currentAnimation = currentEntry.value;\n              }\n\n              currentAnimation.onStart(currentAnimation, prevVal, now, prevAnimation);\n            }\n          }\n        };\n\n        var callback = function callback(finished) {\n          if (!finished) {\n            var animationsToCheck = [styleAnimations];\n\n            while (animationsToCheck.length > 0) {\n              var currentAnimation = animationsToCheck.pop();\n\n              if (Array.isArray(currentAnimation)) {\n                for (var element of currentAnimation) {\n                  animationsToCheck.push(element);\n                }\n              } else if (typeof currentAnimation === 'object' && currentAnimation.onStart === undefined) {\n                for (var value of Object.values(currentAnimation)) {\n                  animationsToCheck.push(value);\n                }\n              } else {\n                var currentStyleAnimation = currentAnimation;\n\n                if (!currentStyleAnimation.finished && currentStyleAnimation.callback) {\n                  currentStyleAnimation.callback(false);\n                }\n              }\n            }\n          }\n        };\n\n        return {\n          isHigherOrder: true,\n          onFrame: onFrame,\n          onStart: onStart,\n          current: {},\n          styleAnimations: styleAnimations,\n          callback: callback\n        };\n      };\n\n      _f._closure = {\n        ColorProperties: _UpdateProps.ColorProperties,\n        processColor: _Colors.processColor,\n        setPath: setPath,\n        styleAnimations: styleAnimations,\n        resolvePath: resolvePath,\n        withTiming: _timing.withTiming\n      };\n      _f.asString = \"function _f(){const{ColorProperties,processColor,setPath,styleAnimations,resolvePath,withTiming}=jsThis._closure;{const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};}}\";\n      _f.__workletHash = 9887536897803;\n      _f.__location = \"C:\\\\Users\\\\Mr. REEETARD\\\\Desktop\\\\FoodSeek\\\\foodseek\\\\src\\\\ui\\\\foodseek\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\styleAnimation.js (43:31)\";\n      return _f;\n    }());\n  };\n\n  _f._closure = {\n    defineAnimation: _util.defineAnimation,\n    ColorProperties: _UpdateProps.ColorProperties,\n    processColor: _Colors.processColor,\n    setPath: setPath,\n    resolvePath: resolvePath,\n    withTiming: _timing.withTiming\n  };\n  _f.asString = \"function withStyleAnimation(styleAnimations){const{defineAnimation,ColorProperties,processColor,setPath,resolvePath,withTiming}=jsThis._closure;{return defineAnimation({},function(){'worklet';const onFrame=function(animation,now){let stillGoing=false;const entriesToCheck=[{value:animation.styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onFrame===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const currentStyleAnimation=currentEntry.value;if(currentStyleAnimation.finished){continue;}const finished=currentStyleAnimation.onFrame(currentStyleAnimation,now);if(finished){currentStyleAnimation.finished=true;if(currentStyleAnimation.callback){currentStyleAnimation.callback(true);}}else{stillGoing=true;}if(ColorProperties.includes(currentEntry.path[0])){currentStyleAnimation.current=processColor(currentStyleAnimation.current);}setPath(animation.current,currentEntry.path,currentStyleAnimation.current);}}return!stillGoing;};const onStart=function(animation,value,now,previousAnimation){const entriesToCheck=[{value:styleAnimations,path:[]}];while(entriesToCheck.length>0){const currentEntry=entriesToCheck.pop();if(Array.isArray(currentEntry.value)){for(let index=0;index<currentEntry.value.length;index++){entriesToCheck.push({value:currentEntry.value[index],path:currentEntry.path.concat(index)});}}else if(typeof currentEntry.value==='object'&&currentEntry.value.onStart===undefined){for(const key of Object.keys(currentEntry.value)){entriesToCheck.push({value:currentEntry.value[key],path:currentEntry.path.concat(key)});}}else{const prevAnimation=resolvePath(previousAnimation===null||previousAnimation===void 0?void 0:previousAnimation.styleAnimations,currentEntry.path);let prevVal=resolvePath(value,currentEntry.path);if(prevAnimation&&!prevVal){prevVal=prevAnimation.current;}setPath(animation.current,currentEntry.path,prevVal);let currentAnimation;if(typeof currentEntry.value!=='object'||!currentEntry.value.onStart){currentAnimation=withTiming(currentEntry.value,{duration:0});setPath(animation.styleAnimations,currentEntry.path,currentAnimation);}else{currentAnimation=currentEntry.value;}currentAnimation.onStart(currentAnimation,prevVal,now,prevAnimation);}}};const callback=function(finished){if(!finished){const animationsToCheck=[styleAnimations];while(animationsToCheck.length>0){const currentAnimation=animationsToCheck.pop();if(Array.isArray(currentAnimation)){for(const element of currentAnimation){animationsToCheck.push(element);}}else if(typeof currentAnimation==='object'&&currentAnimation.onStart===undefined){for(const value of Object.values(currentAnimation)){animationsToCheck.push(value);}}else{const currentStyleAnimation=currentAnimation;if(!currentStyleAnimation.finished&&currentStyleAnimation.callback){currentStyleAnimation.callback(false);}}}}};return{isHigherOrder:true,onFrame:onFrame,onStart:onStart,current:{},styleAnimations:styleAnimations,callback:callback};});}}\";\n  _f.__workletHash = 15006684130601;\n  _f.__location = \"C:\\\\Users\\\\Mr. REEETARD\\\\Desktop\\\\FoodSeek\\\\foodseek\\\\src\\\\ui\\\\foodseek\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\reanimated2\\\\animation\\\\styleAnimation.js (41:7)\";\n  return _f;\n}();\n\nexports.withStyleAnimation = withStyleAnimation;","map":{"version":3,"sources":["C:/Users/Mr. REEETARD/Desktop/FoodSeek/foodseek/src/ui/foodseek/node_modules/react-native-reanimated/lib/reanimated2/animation/styleAnimation.js"],"names":["resolvePath","obj","path","keys","Array","isArray","reduce","acc","current","undefined","setPath","value","currObj","i","length","withStyleAnimation","styleAnimations","onFrame","animation","now","stillGoing","entriesToCheck","currentEntry","pop","index","push","concat","key","Object","currentStyleAnimation","finished","callback","ColorProperties","includes","onStart","previousAnimation","prevAnimation","prevVal","currentAnimation","duration","animationsToCheck","element","values","isHigherOrder","processColor","withTiming","defineAnimation"],"mappings":"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","sourcesContent":["import { defineAnimation } from './util';\r\nimport { withTiming } from './timing';\r\nimport { ColorProperties } from '../UpdateProps';\r\nimport { processColor } from '../Colors';\r\n// resolves path to value for nested objects\r\n// if path cannot be resolved returns undefined\r\nexport function resolvePath(obj, path) {\r\n    'worklet';\r\n    const keys = Array.isArray(path) ? path : [path];\r\n    return keys.reduce((acc, current) => {\r\n        if (Array.isArray(acc) && typeof current === 'number') {\r\n            return acc[current];\r\n        }\r\n        else if (typeof acc === 'object' && current in acc) {\r\n            return acc[current];\r\n        }\r\n        return undefined;\r\n    }, obj);\r\n}\r\nexport function setPath(obj, path, value) {\r\n    'worklet';\r\n    const keys = Array.isArray(path) ? path : [path];\r\n    let currObj = obj;\r\n    for (let i = 0; i < keys.length - 1; i++) {\r\n        // creates entry if there isn't one\r\n        currObj = currObj;\r\n        if (!currObj[keys[i]]) {\r\n            // if next key is a number create an array\r\n            if (typeof keys[i + 1] === 'number') {\r\n                currObj[keys[i]] = [];\r\n            }\r\n            else {\r\n                currObj[keys[i]] = {};\r\n            }\r\n        }\r\n        currObj = currObj[keys[i]];\r\n    }\r\n    currObj[keys[keys.length - 1]] =\r\n        value;\r\n}\r\nexport function withStyleAnimation(styleAnimations) {\r\n    'worklet';\r\n    return defineAnimation({}, () => {\r\n        'worklet';\r\n        const onFrame = (animation, now) => {\r\n            let stillGoing = false;\r\n            const entriesToCheck = [\r\n                { value: animation.styleAnimations, path: [] },\r\n            ];\r\n            while (entriesToCheck.length > 0) {\r\n                const currentEntry = entriesToCheck.pop();\r\n                if (Array.isArray(currentEntry.value)) {\r\n                    for (let index = 0; index < currentEntry.value.length; index++) {\r\n                        entriesToCheck.push({\r\n                            value: currentEntry.value[index],\r\n                            path: currentEntry.path.concat(index),\r\n                        });\r\n                    }\r\n                }\r\n                else if (typeof currentEntry.value === 'object' &&\r\n                    currentEntry.value.onFrame === undefined) {\r\n                    // nested object\r\n                    for (const key of Object.keys(currentEntry.value)) {\r\n                        entriesToCheck.push({\r\n                            value: currentEntry.value[key],\r\n                            path: currentEntry.path.concat(key),\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    const currentStyleAnimation = currentEntry.value;\r\n                    if (currentStyleAnimation.finished) {\r\n                        continue;\r\n                    }\r\n                    const finished = currentStyleAnimation.onFrame(currentStyleAnimation, now);\r\n                    if (finished) {\r\n                        currentStyleAnimation.finished = true;\r\n                        if (currentStyleAnimation.callback) {\r\n                            currentStyleAnimation.callback(true);\r\n                        }\r\n                    }\r\n                    else {\r\n                        stillGoing = true;\r\n                    }\r\n                    if (ColorProperties.includes(currentEntry.path[0])) {\r\n                        currentStyleAnimation.current = processColor(currentStyleAnimation.current);\r\n                    }\r\n                    setPath(animation.current, currentEntry.path, currentStyleAnimation.current);\r\n                }\r\n            }\r\n            return !stillGoing;\r\n        };\r\n        const onStart = (animation, value, now, previousAnimation) => {\r\n            const entriesToCheck = [{ value: styleAnimations, path: [] }];\r\n            while (entriesToCheck.length > 0) {\r\n                const currentEntry = entriesToCheck.pop();\r\n                if (Array.isArray(currentEntry.value)) {\r\n                    for (let index = 0; index < currentEntry.value.length; index++) {\r\n                        entriesToCheck.push({\r\n                            value: currentEntry.value[index],\r\n                            path: currentEntry.path.concat(index),\r\n                        });\r\n                    }\r\n                }\r\n                else if (typeof currentEntry.value === 'object' &&\r\n                    currentEntry.value.onStart === undefined) {\r\n                    for (const key of Object.keys(currentEntry.value)) {\r\n                        entriesToCheck.push({\r\n                            value: currentEntry.value[key],\r\n                            path: currentEntry.path.concat(key),\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    const prevAnimation = resolvePath(previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.styleAnimations, currentEntry.path);\r\n                    let prevVal = resolvePath(value, currentEntry.path);\r\n                    if (prevAnimation && !prevVal) {\r\n                        prevVal = prevAnimation.current;\r\n                    }\r\n                    setPath(animation.current, currentEntry.path, prevVal);\r\n                    let currentAnimation;\r\n                    if (typeof currentEntry.value !== 'object' ||\r\n                        !currentEntry.value.onStart) {\r\n                        currentAnimation = withTiming(currentEntry.value, { duration: 0 });\r\n                        setPath(animation.styleAnimations, currentEntry.path, currentAnimation);\r\n                    }\r\n                    else {\r\n                        currentAnimation = currentEntry.value;\r\n                    }\r\n                    currentAnimation.onStart(currentAnimation, prevVal, now, prevAnimation);\r\n                }\r\n            }\r\n        };\r\n        const callback = (finished) => {\r\n            if (!finished) {\r\n                const animationsToCheck = [\r\n                    styleAnimations,\r\n                ];\r\n                while (animationsToCheck.length > 0) {\r\n                    const currentAnimation = animationsToCheck.pop();\r\n                    if (Array.isArray(currentAnimation)) {\r\n                        for (const element of currentAnimation) {\r\n                            animationsToCheck.push(element);\r\n                        }\r\n                    }\r\n                    else if (typeof currentAnimation === 'object' &&\r\n                        currentAnimation.onStart === undefined) {\r\n                        for (const value of Object.values(currentAnimation)) {\r\n                            animationsToCheck.push(value);\r\n                        }\r\n                    }\r\n                    else {\r\n                        const currentStyleAnimation = currentAnimation;\r\n                        if (!currentStyleAnimation.finished &&\r\n                            currentStyleAnimation.callback) {\r\n                            currentStyleAnimation.callback(false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return {\r\n            isHigherOrder: true,\r\n            onFrame,\r\n            onStart,\r\n            current: {},\r\n            styleAnimations,\r\n            callback,\r\n        };\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"script"}