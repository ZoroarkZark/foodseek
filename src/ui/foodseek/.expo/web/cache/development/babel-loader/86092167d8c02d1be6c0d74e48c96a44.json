{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnimatedParam = void 0;\nexports.createAnimatedParam = createAnimatedParam;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _AnimatedNode2 = _interopRequireWildcard(require(\"./AnimatedNode\"));\n\nvar _AnimatedClock = _interopRequireDefault(require(\"./AnimatedClock\"));\n\nvar _val = require(\"../val\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar AnimatedParam = function (_AnimatedNode) {\n  (0, _inherits2.default)(AnimatedParam, _AnimatedNode);\n\n  var _super = _createSuper(AnimatedParam);\n\n  function AnimatedParam() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AnimatedParam);\n    _this = _super.call(this, {\n      type: 'param'\n    }, []);\n    _this.argsStack = [];\n\n    _this.__attach();\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(AnimatedParam, [{\n    key: \"beginContext\",\n    value: function beginContext(ref, prevCallID) {\n      this._prevCallID = prevCallID;\n      this.argsStack.push(ref);\n    }\n  }, {\n    key: \"endContext\",\n    value: function endContext() {\n      this.argsStack.pop();\n    }\n  }, {\n    key: \"_getTopNode\",\n    value: function _getTopNode() {\n      if (this.argsStack.length === 0) throw new Error(\"param: Invocation failed because argsStack is empty\");\n      var top = this.argsStack[this.argsStack.length - 1];\n      return top;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      var top = this._getTopNode();\n\n      if (top.setValue) {\n        var callID = (0, _AnimatedNode2.getCallID)();\n        (0, _AnimatedNode2.setCallID)(this._prevCallID);\n        top.setValue(value);\n        (0, _AnimatedNode2.setCallID)(callID);\n      } else {\n        throw new Error(\"param: setValue(\" + value + \") failed because the top element has no known method for updating it's current value.\");\n      }\n    }\n  }, {\n    key: \"__onEvaluate\",\n    value: function __onEvaluate() {\n      var callID = (0, _AnimatedNode2.getCallID)();\n      (0, _AnimatedNode2.setCallID)(this._prevCallID);\n\n      var top = this._getTopNode();\n\n      var value = (0, _val.val)(top);\n      (0, _AnimatedNode2.setCallID)(callID);\n      return value;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var node = this._getTopNode();\n\n      (0, _invariant.default)(node instanceof _AnimatedClock.default || node instanceof AnimatedParam, \"param: top node should be of type AnimatedClock but got \" + node);\n      node.start();\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var node = this._getTopNode();\n\n      (0, _invariant.default)(node instanceof _AnimatedClock.default || node instanceof AnimatedParam, \"param: top node should be of type AnimatedClock but got \" + node);\n      node.stop();\n    }\n  }, {\n    key: \"isRunning\",\n    value: function isRunning() {\n      var node = this._getTopNode();\n\n      if (node instanceof AnimatedParam) {\n        return node.isRunning();\n      }\n\n      (0, _invariant.default)(node instanceof _AnimatedClock.default, \"param: top node should be of type AnimatedClock but got \" + node);\n      return node.isStarted();\n    }\n  }]);\n  return AnimatedParam;\n}(_AnimatedNode2.default);\n\nexports.AnimatedParam = AnimatedParam;\n\nfunction createAnimatedParam() {\n  return new AnimatedParam();\n}","map":{"version":3,"sources":["C:/Users/Mr. REEETARD/Desktop/FoodSeek/foodseek/src/ui/foodseek/node_modules/react-native-reanimated/lib/reanimated1/core/AnimatedParam.js"],"names":["AnimatedParam","type","argsStack","__attach","ref","prevCallID","_prevCallID","push","pop","length","Error","top","value","_getTopNode","setValue","callID","node","AnimatedClock","start","stop","isRunning","isStarted","AnimatedNode","createAnimatedParam"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;IAEaA,a;;;;;AAIX,2BAAc;AAAA;;AAAA;AACZ,8BAAM;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAN,EAAyB,EAAzB;AADY,UAHdC,SAGc,GAHF,EAGE;;AAEZ,UAAKC,QAAL;;AAFY;AAGb;;;;WAED,sBAAaC,GAAb,EAAkBC,UAAlB,EAA8B;AAC5B,WAAKC,WAAL,GAAmBD,UAAnB;AACA,WAAKH,SAAL,CAAeK,IAAf,CAAoBH,GAApB;AACD;;;WAED,sBAAa;AACX,WAAKF,SAAL,CAAeM,GAAf;AACD;;;WAED,uBAAc;AACZ,UAAI,KAAKN,SAAL,CAAeO,MAAf,KAA0B,CAA9B,EACE,MAAM,IAAIC,KAAJ,uDAAN;AACF,UAAMC,GAAG,GAAG,KAAKT,SAAL,CAAe,KAAKA,SAAL,CAAeO,MAAf,GAAwB,CAAvC,CAAZ;AACA,aAAOE,GAAP;AACD;;;WAED,kBAASC,KAAT,EAAgB;AACd,UAAMD,GAAG,GAAG,KAAKE,WAAL,EAAZ;;AACA,UAAIF,GAAG,CAACG,QAAR,EAAkB;AAChB,YAAMC,MAAM,GAAG,+BAAf;AACA,sCAAU,KAAKT,WAAf;AACAK,QAAAA,GAAG,CAACG,QAAJ,CAAaF,KAAb;AACA,sCAAUG,MAAV;AACD,OALD,MAKO;AACL,cAAM,IAAIL,KAAJ,sBACeE,KADf,2FAAN;AAGD;AACF;;;WAED,wBAAe;AACb,UAAMG,MAAM,GAAG,+BAAf;AACA,oCAAU,KAAKT,WAAf;;AACA,UAAMK,GAAG,GAAG,KAAKE,WAAL,EAAZ;;AACA,UAAMD,KAAK,GAAG,cAAID,GAAJ,CAAd;AACA,oCAAUI,MAAV;AACA,aAAOH,KAAP;AACD;;;WAED,iBAAQ;AACN,UAAMI,IAAI,GAAG,KAAKH,WAAL,EAAb;;AACA,8BACEG,IAAI,YAAYC,sBAAhB,IAAiCD,IAAI,YAAYhB,aADnD,+DAE6DgB,IAF7D;AAIAA,MAAAA,IAAI,CAACE,KAAL;AACD;;;WAED,gBAAO;AACL,UAAMF,IAAI,GAAG,KAAKH,WAAL,EAAb;;AACA,8BACEG,IAAI,YAAYC,sBAAhB,IAAiCD,IAAI,YAAYhB,aADnD,+DAE6DgB,IAF7D;AAIAA,MAAAA,IAAI,CAACG,IAAL;AACD;;;WAED,qBAAY;AACV,UAAMH,IAAI,GAAG,KAAKH,WAAL,EAAb;;AAEA,UAAIG,IAAI,YAAYhB,aAApB,EAAmC;AACjC,eAAOgB,IAAI,CAACI,SAAL,EAAP;AACD;;AACD,8BACEJ,IAAI,YAAYC,sBADlB,+DAE6DD,IAF7D;AAIA,aAAOA,IAAI,CAACK,SAAL,EAAP;AACD;;;EA7EgCC,sB;;;;AAgF5B,SAASC,mBAAT,GAA+B;AACpC,SAAO,IAAIvB,aAAJ,EAAP;AACD","sourcesContent":["import invariant from 'invariant';\r\nimport AnimatedNode, { getCallID, setCallID } from './AnimatedNode';\r\nimport AnimatedClock from './AnimatedClock';\r\nimport { val } from '../val';\r\n\r\nexport class AnimatedParam extends AnimatedNode {\r\n  argsStack = [];\r\n  _prevCallID;\r\n\r\n  constructor() {\r\n    super({ type: 'param' }, []);\r\n    this.__attach();\r\n  }\r\n\r\n  beginContext(ref, prevCallID) {\r\n    this._prevCallID = prevCallID;\r\n    this.argsStack.push(ref);\r\n  }\r\n\r\n  endContext() {\r\n    this.argsStack.pop();\r\n  }\r\n\r\n  _getTopNode() {\r\n    if (this.argsStack.length === 0)\r\n      throw new Error(`param: Invocation failed because argsStack is empty`);\r\n    const top = this.argsStack[this.argsStack.length - 1];\r\n    return top;\r\n  }\r\n\r\n  setValue(value) {\r\n    const top = this._getTopNode();\r\n    if (top.setValue) {\r\n      const callID = getCallID();\r\n      setCallID(this._prevCallID);\r\n      top.setValue(value);\r\n      setCallID(callID);\r\n    } else {\r\n      throw new Error(\r\n        `param: setValue(${value}) failed because the top element has no known method for updating it's current value.`\r\n      );\r\n    }\r\n  }\r\n\r\n  __onEvaluate() {\r\n    const callID = getCallID();\r\n    setCallID(this._prevCallID);\r\n    const top = this._getTopNode();\r\n    const value = val(top);\r\n    setCallID(callID);\r\n    return value;\r\n  }\r\n\r\n  start() {\r\n    const node = this._getTopNode();\r\n    invariant(\r\n      node instanceof AnimatedClock || node instanceof AnimatedParam,\r\n      `param: top node should be of type AnimatedClock but got ${node}`\r\n    );\r\n    node.start();\r\n  }\r\n\r\n  stop() {\r\n    const node = this._getTopNode();\r\n    invariant(\r\n      node instanceof AnimatedClock || node instanceof AnimatedParam,\r\n      `param: top node should be of type AnimatedClock but got ${node}`\r\n    );\r\n    node.stop();\r\n  }\r\n\r\n  isRunning() {\r\n    const node = this._getTopNode();\r\n\r\n    if (node instanceof AnimatedParam) {\r\n      return node.isRunning();\r\n    }\r\n    invariant(\r\n      node instanceof AnimatedClock,\r\n      `param: top node should be of type AnimatedClock but got ${node}`\r\n    );\r\n    return node.isStarted();\r\n  }\r\n}\r\n\r\nexport function createAnimatedParam() {\r\n  return new AnimatedParam();\r\n}\r\n"]},"metadata":{},"sourceType":"script"}